package com.isz.erp.house.service.impl;

import com.isz.erp.common.page.PagingHelper;
import com.isz.erp.common.util.IszLogger;
import com.isz.erp.common.util.ResultMsg;
import com.isz.erp.common.util.ResultObjectMsg;
import com.isz.erp.facade.house.entity.BusinessCircle;
import com.isz.erp.facade.house.service.DistrictBusinessCircleService;
import com.isz.erp.facade.house.vo.DistrictBusinessCircleVo;
import com.isz.erp.facade.user.entity.SysDistrict;
import com.isz.erp.facade.user.entity.SysUser;
import com.isz.erp.house.biz.DistrictBusinessCircleServiceBiz;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Map;

/**
 * Created by shaozhipeng on 16/11/2.
 */
@Service("districtBusinessCircleServiceFacade")
public class DistrictBusinessCircleServiceFacade implements DistrictBusinessCircleService {
    @Autowired
    private DistrictBusinessCircleServiceBiz districtBusinessCircleServiceBiz;

    @Override
    public ResultObjectMsg<List<DistrictBusinessCircleVo>> getDistrictBusinessCircleTree() {
        try {
            return districtBusinessCircleServiceBiz.getDistrictBusinessCircleTree();
        } catch (Exception e) {
            IszLogger.error("DistrictBusinessCircleServiceFacade.getDistrictBusinessCircleTree", e);
            return new ResultObjectMsg<List<DistrictBusinessCircleVo>>(e.getMessage());
        }
    }

    @Override
    public ResultObjectMsg<PagingHelper<Map<String, Object>>> searchDistrictList(Map<String, Object> pageData) {
        try {
            return districtBusinessCircleServiceBiz.searchDistrictList(pageData);
        } catch (Exception e) {
            IszLogger.error("DistrictBusinessCircleServiceFacade.searchDistrictList", e);
            return new ResultObjectMsg<PagingHelper<Map<String, Object>>>(e.getMessage());
        }
    }

    @Override
    public ResultObjectMsg<PagingHelper<Map<String, Object>>> searchBusinessCircleList(Map<String, Object> pageData) {
        try {
            return districtBusinessCircleServiceBiz.searchBusinessCircleList(pageData);
        } catch (Exception e) {
            IszLogger.error("DistrictBusinessCircleServiceFacade.searchBusinessCircleList", e);
            return new ResultObjectMsg<PagingHelper<Map<String, Object>>>(e.getMessage());
        }
    }

    @Override
    public ResultObjectMsg<SysDistrict> selectSysDistrictDetail(String code) {
        try {
            return districtBusinessCircleServiceBiz.selectSysDistrictDetail(code);
        } catch (Exception e) {
            IszLogger.error("DistrictBusinessCircleServiceFacade.selectSysDistrictDetail", e);
            return new ResultObjectMsg<SysDistrict>(e.getMessage());
        }
    }

    @Override
    public ResultObjectMsg<BusinessCircle> selectBusinessCircleDetail(String business_circle_id) {
        try {
            return districtBusinessCircleServiceBiz.selectBusinessCircleDetail(business_circle_id);
        } catch (Exception e) {
            IszLogger.error("DistrictBusinessCircleServiceFacade.selectBusinessCircleDetail", e);
            return new ResultObjectMsg<BusinessCircle>(e.getMessage());
        }
    }

    @Override
    public ResultMsg saveSysDistrict(SysUser sysUser, SysDistrict sysDistrict) {
        try {
            return districtBusinessCircleServiceBiz.saveSysDistrict(sysUser, sysDistrict);
        } catch (Exception e) {
            IszLogger.error("DistrictBusinessCircleServiceFacade.saveSysDistrict", e);
            return ResultMsg.createErrorMsg(e.getMessage());
        }
    }

    @Override
    public ResultMsg saveBusinessCircle(SysUser sysUser, BusinessCircle businessCircle) {
        try {
            return districtBusinessCircleServiceBiz.saveBusinessCircle(sysUser, businessCircle);
        } catch (Exception e) {
            IszLogger.error("DistrictBusinessCircleServiceFacade.saveBusinessCircle", e);
            return ResultMsg.createErrorMsg(e.getMessage());
        }
    }

    @Override
    public ResultMsg deleteSysDistrict(SysUser sysUser, String code) {
        try {
            return districtBusinessCircleServiceBiz.deleteSysDistrict(sysUser, code);
        } catch (Exception e) {
            IszLogger.error("DistrictBusinessCircleServiceFacade.deleteSysDistrict", e);
            return ResultMsg.createErrorMsg(e.getMessage());
        }
    }

    @Override
    public ResultMsg deleteBusinessCircle(SysUser sysUser, String business_circle_id) {
        try {
            return districtBusinessCircleServiceBiz.deleteBusinessCircle(sysUser, business_circle_id);
        } catch (Exception e) {
            IszLogger.error("DistrictBusinessCircleServiceFacade.deleteBusinessCircle", e);
            return ResultMsg.createErrorMsg(e.getMessage());
        }
    }
}
