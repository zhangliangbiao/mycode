<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.isz.erp.house.mapper.OnlineApartmentMapper">
	<!-- resultMap -->
	<resultMap id="ApartmentMap" type="com.isz.erp.facade.house.entity.Apartment">
	    <id column="apartment_id" property="apartment_id"/>
	    <result column="residential_id" property="residential_id"/>
	    <result column="building_id" property="building_id"/>
	    <result column="house_id" property="house_id"/>
	    <result column="house_contract_id" property="house_contract_id"/>
	    <result column="room_id" property="room_id"/>
	    <result column="city_code" property="city_code"/>
	    <result column="area_code" property="area_code"/>
	    <result column="apartment_code" property="apartment_code"/>
	    <result column="apartment_type" property="apartment_type"/>
	    <result column="rent_type" property="rent_type"/>
	    <result column="rent_status" property="rent_status"/>
	    <result column="look_type" property="look_type"/>
	    <result column="look_date" property="look_date"/>
	    <result column="fitment_cost" property="fitment_cost"/>
	    <result column="entrust_cost" property="entrust_cost"/>
	    <result column="capital_cost" property="capital_cost"/>
	    <result column="apartment_cost" property="apartment_cost"/>
	    <result column="rent_price" property="rent_price"/>
	    <result column="did" property="did"/>
	    <result column="uid" property="uid"/>
	    <result column="remark" property="remark"/>
	    <result column="is_active" property="is_active"/>
	    <result column="online_status" property="online_status"/>
	    <result column="online_uid" property="online_uid"/>
	    <result column="online_time" property="online_time"/>
	    <result column="activated_type" property="activated_type"/>
	    <result column="activated_time" property="activated_time"/>
	    <result column="activated_uid" property="activated_uid"/>
	    <result column="fire_status" property="fire_status"/>
	    <result column="deleted" property="deleted"/>
	    <result column="create_time" property="create_time"/>
	    <result column="create_uid" property="create_uid"/>
	    <result column="update_time" property="update_time"/>
	    <result column="update_uid" property="update_uid"/>
	    <result column="service_did" property="service_did"/>
	    <result column="service_uid" property="service_uid"/>

		<result column="tax_bear" property="tax_bear"/>

	    <result column="room_code" property="room_code"/>
	    <result column="room_no" property="room_no"/>
	    <result column="room_area" property="room_area"/>
	    <result column="room_orientation" property="room_orientation"/>
	    <result column="original_room_type" property="original_room_type"/>
	    <result column="decoration_style" property="decoration_style"/>
	    <result column="fitment_style" property="fitment_style"/>

		<result column="check_in_date" property="check_in_date"/>
		<result column="fitment_type" property="fitment_type"/>
		<result column="category" property="category"/>
		<result column="property" property="property"/>
		<result column="dealtype" property="dealtype"/>
		<result column="issure_audit_status" property="issure_audit_status"/>
		<result column="recommended_title" property="recommended_title"/>
		<result column="apply_photo_time" property="apply_photo_time"/>
		<result column="finishUserName" property="finishUserName"/>
		<result column="finish_time" property="finish_time"/>
		<result column="audit_time" property="audit_time"/>
		

	    <!-- 商圈 -->
	    <collection property="businessCircleList"
	    	column="residential_id" select="com.isz.erp.house.mapper.BusinessCircleMapper.selectBusidessCircleByResiId" fetchType="lazy">
	    </collection>

	    <!-- 托管公寓出租房源配置 -->
	    <collection property="houseConfigurationList" ofType="com.isz.erp.facade.house.entity.HouseConfiguration"
	 		column="house_id" select="com.isz.erp.house.mapper.HouseConfigurationMapper.selectByHouseId" fetchType="lazy">
	 	</collection>

	 	<!-- 托管房源出租房源图片 -->
	 	<collection property="houseImgList"
	 	    column="house_id" select="com.isz.erp.house.mapper.HouseImgMapper.selectListByHouseId" fetchType="lazy">
	 	</collection>

	 	<!-- 自营公寓房间特色信息列表 -->
		<collection property="houseRoomFeatureList" ofType="com.isz.erp.facade.house.entity.HouseRoomFeature"
	 		column="room_id" select="com.isz.erp.house.mapper.HouseRoomFeatureMapper.selectByRoomId" fetchType="lazy">
	 	</collection>

	 	<!-- 自营公寓房间配置信息列表 -->
		<collection property="houseRoomConfigurationList" ofType="com.isz.erp.facade.house.entity.HouseRoomConfiguration"
	 		column="room_id" select="com.isz.erp.house.mapper.HouseRoomConfigurationMapper.selectByRoomId" fetchType="lazy">
	 	</collection>

	 	<!-- 卧室房屋室内图 -->
	 	<collection property="houseRoomImgList"
	 	    column="room_id" select="com.isz.erp.house.mapper.HouseRoomImgMapper.selectByRoomId" fetchType="lazy">
	 	</collection>
 	</resultMap>

	<select id="selectCurrentApartmentRentPrice" parameterType="string" resultType="map">
		select * from apartment_contract_rent_info where contract_id=#{0} and start_date <![CDATA[>=]]> now() and end_date <![CDATA[<=]]> now() order by start_date asc limit 1
	</select>



	<sql id="sqlForList">
        <where>
			<trim prefixOverrides="and">
				and a.is_active='Y' 
				<if test="apartment_code_search != null  and apartment_code_search != ''">
					and a.apartment_code like CONCAT('%','${apartment_code_search}','%')
				</if>
				<if test="city_code_search != null and '' != city_code_search">
					and a.city_code = #{city_code_search}
				</if>
				<if test="area_code_search != null">
					and a.area_code in (${area_code_search})
				</if>
				 <if test="residential_name_search != null and '' != residential_name_search">
					and (
					 	r.residential_name like CONCAT('%','${residential_name_search}','%')
					 	OR r.byname like CONCAT('%','${residential_name_search}','%' )
					 )
				</if>
				<if test="residential_name_house_code_search != null and '' != residential_name_house_code_search">
					and (r.residential_name like CONCAT('%','${residential_name_house_code_search}','%')
					OR a.apartment_code like CONCAT('%','${residential_name_house_code_search}','%')
					OR r.byname like CONCAT('%','${residential_name_house_code_search}','%' )
					)
				</if>
				 <if test="building_name_search != null and '' != building_name_search">
					and rb.building_name like CONCAT('%','${building_name_search}','%')
				</if>
				 <if test="unit_search != null and '' != unit_search">
					and h.unit = #{unit_search}
				</if>
				<if test="house_no_search != null and '' != house_no_search">
					and h.house_no like CONCAT('%','${house_no_search}','%' )
				</if>
				<if test="activated_type_search != null and '' !=activated_type_search">
					and a.activated_type in (${activated_type_search})
				</if>
				<if test="rooms_search != null and '' != rooms_search">
					and fh.rooms in (${rooms_search})
				</if>
				<if test="fitment_type_search != null and '' != fitment_type_search">
					and a.fitment_type in (${fitment_type_search})
				</if>
				 <if test="rent_status_search != null and '' != rent_status_search">
					and a.rent_status in (${rent_status_search})
				</if>
				<if test="build_area_min_search != null and '' != build_area_min_search">
					and h.build_area <![CDATA[>=]]> #{build_area_min_search}
				</if>
				<if test="build_area_max_search != null and '' != build_area_max_search">
					and h.build_area <![CDATA[<=]]> #{build_area_max_search}
				</if>
				<if test="floor_min_search != null">
					and h.floor <![CDATA[>=]]> ${floor_min_search}
				</if>
				<if test="floor_max_search != null">
					and h.floor <![CDATA[<=]]> ${floor_max_search}
				</if>
				<if test="rent_price_min_search != null">
					and a.rent_price <![CDATA[>=]]> #{rent_price_min_search}
				</if>
				<if test="rent_price_max_search != null">
					and a.rent_price <![CDATA[<=]]> #{rent_price_max_search}
				</if>
				<if test="look_date_min_search != null">
					and date(a.look_date) <![CDATA[>=]]> #{look_date_min_search}
				</if>
				<if test="look_date_max_search != null">
					and date(a.look_date) <![CDATA[<=]]> #{look_date_max_search}
				</if>
				<if test="activated_time_min_search != null">
					and date(a.activated_time) <![CDATA[>=]]> #{activated_time_min_search}
				</if>
				<if test="activated_time_max_search != null">
					and date(a.activated_time) <![CDATA[<=]]> #{activated_time_max_search}
				</if>
				<!-- 签约部门 -->
				<if test="sign_dept_search != null and '' != sign_dept_search and (null == sign_uid_search or '' == sign_uid_search)">
					and su.dep_id in (select t.child_id from sys_department_flat t where t.dept_id in (${sign_dept_search}))
				</if>
				<!-- 签约人 -->
				<if test="sign_uid_search != null and '' != sign_uid_search">
					and hc.sign_uid in (${sign_uid_search})
				</if>
				<!-- 所属部门 -->
				<if test="belong_dept_search != null and '' != belong_dept_search and (null == belong_uid_search or '' == belong_uid_search)">
					and asu.dep_id in (select t.child_id from sys_department_flat t where t.dept_id in (${belong_dept_search}))
				</if>
				<!-- 所属人 -->
				<if test="belong_uid_search != null">
					and a.uid in (${belong_uid_search})
				</if>
				<if test="business_circle_search != null">
					and EXISTS(select 1 from residential_business_circle c where c.residential_id=a.residential_id and c.business_circle_id in (${business_circle_search}))
				</if>
				<if test="feature_code_search != null">
					and EXISTS(select 1 from house_room_feature cf where cf.room_id=hr.room_id and cf.feature_code in (${feature_code_search}))
				</if>
				<if test="orientation_search != null">
					and h.orientation in (${orientation_search})
				</if>
				<if test="rent_end_date_min_search != null">
					and date(ac.rent_end_date) <![CDATA[>=]]> #{rent_end_date_min_search}
				</if>
				<if test="rent_end_date_max_search != null">
					and date(ac.rent_end_date) <![CDATA[<=]]> #{rent_end_date_max_search}
				</if>
				<if test="property_use_search != null">
					and h.property_use in (${property_use_search})
				</if>
				<if test="property_type_search != null">
					and h.property_type in (${property_type_search})
				</if>
				<if test="apartment_follow_time_min_search != null">
					and date(arf.apartment_follow_time) <![CDATA[>=]]> #{apartment_follow_time_min_search}
				</if>
				<if test="apartment_follow_time_max_search != null">
					and date(arf.apartment_follow_time) <![CDATA[<=]]> #{apartment_follow_time_max_search}
				</if>
				<if test="fire_status_search != null">
					and a.fire_status in (${fire_status_search})
				</if>

				 <!-- 责任部门 -->
				<if test="dept_response_search != null">
					and EXISTS(select 1 from residential_department d where d.residential_id=r.residential_id and d.did in (#{dept_response_search}))
				</if>
				<!-- 服务管家 -->
				<if test="service_uid_search != null">
					and a.service_uid in (${service_uid_search})
				</if>
				<if test="apartment_type_search != null">
					and a.apartment_type in (${apartment_type_search})
				</if>
				<if test="fitment_status_search != null">
					and fh.fitment_status in (${fitment_status_search})
				</if>
				<!-- 是否有钥匙 -->
				<if test="apartment_key_search != null and apartment_key_search == 0">
					and (a.look_type != 'HAVE_KEY' and a.look_type != 'SMART_KEY' OR a.look_type IS NULL)
				</if>
				<if test="apartment_key_search != null and apartment_key_search == 1">
					and (a.look_type = 'HAVE_KEY' or a.look_type = 'SMART_KEY')
				</if>

				<!-- 托管日期 -->
				<if test="house_contract_create_time_min_search != null">
					and date(hc.create_time) <![CDATA[>=]]> #{house_contract_create_time_min_search}
				</if>
				<if test="house_contract_create_time_max_search != null">
					and date(hc.create_time) <![CDATA[<=]]> #{house_contract_create_time_max_search}
				</if>
				<if test="reform_way_search != null">
					and fh.reform_way in (${reform_way_search})
				</if>
				<if test="look_type_search != null">
					and a.look_type in (${look_type_search})
				</if>
				<if test="apartment_kind_search != null">
					and fh.apartment_kind in (${apartment_kind_search})
				</if>
				<if test="entrust_end_date_min_search != null">
					and date(hc.entrust_end_date) <![CDATA[>=]]> #{entrust_end_date_min_search}
				</if>
				<if test="entrust_end_date_max_search != null">
					and date(hc.entrust_end_date) <![CDATA[<=]]> #{entrust_end_date_max_search}
				</if>
				<if test="audit_status != null">
					and ohi.audit_status = #{audit_status}
				</if>
				<if test="status != null">
					and ap.status = #{status}
				</if>
				<if test="house_catalogy != null">
					and ohc.recommended_type = #{house_catalogy}
					and a.rent_status='WAITING_RENT' 
				</if>
				<if test="rent_type_search != null">
					and a.rent_type=#{rent_type_search}
				</if>
				
			</trim>
			and a.deleted = 0
			and a.is_active = 'Y'
			and hc.deleted = 0
        </where>
	</sql>

	<!-- 符合查询 条件的整租房源信息 -->
	<select id="searchOnlineApartmentList" parameterType="java.util.Map" resultMap="ApartmentMap">

		select

		<include refid="colEntireApartmentSQL"/>

		<include refid="entireApartmentSql"></include>

		<include refid="condEntireApartmentSql"/>

		<if test="null != sort and sort != ''">
			ORDER BY ${sort}
			<if test="null != order and order != ''">
				${order}
			</if>
		</if>
		<if test="null != offset and '' != offset and null != limit and '' != limit" >
			limit offset,limit
		</if>

	</select>

	<!-- 符合查询条件的整租房源记录总数 -->
	<select id="countSearchOnlineApartment" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT count(1) <include refid="entireApartmentSql"></include>  <include refid="condEntireApartmentSql"/>
	</select>
	
	
	<!-- 符合查询 条件的整租房源信息 -->
	<select id="searchPhotoApartmentList" parameterType="java.util.Map" resultMap="ApartmentMap">

		select

		<include refid="colPhotoApartmentSQL"/>

		<include refid="photoApartmentSql"></include>

		<include refid="condEntireApartmentSql"/>

		<if test="null != sort and sort != ''">
			ORDER BY ${sort}
			<if test="null != order and order != ''">
				${order}
			</if>
		</if>
		<if test="null != offset and '' != offset and null != limit and '' != limit" >
			limit offset,limit
		</if>

	</select>

	<!-- 符合查询条件的整租房源记录总数 -->
	<select id="countSearchPhotoApartment" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT count(1) <include refid="photoApartmentSql"></include>  <include refid="condEntireApartmentSql"/>
	</select>

	<sql id="colEntireApartmentSQL">
		a.house_contract_id,
		a.room_id,
		hr.room_code,

		a.apartment_id,
		a.residential_id,
		a.building_id,
		a.house_id,
		a.room_id,
		a.apartment_code,
		a.apartment_type,
		a.rent_type,
		a.rent_status,
		a.property,
		a.category,
		a.dealtype,
		a.fire_status,
		fh.fitment_status,
		fh.fitment_style,
		a.look_date,
		a.look_type,
		a.city_code,
		a.area_code,
		a.online_status,
		a.online_time,
		a.online_uid,
		a.activated_time,
		a.activated_type,
		a.activated_uid,
		a.fitment_cost,
		a.entrust_cost,
		a.capital_cost,
		a.apartment_cost,
		a.rent_price,
		asu.dep_id as did,
		a.uid,
		a.remark,
		a.create_time,
		a.create_uid,
		a.deleted,
		r.residential_name,
		sd.`name` AS area_name,
		h.house_code,
		hr.room_no,
		case a.rent_type when 'ENTIRE' then
			h.orientation
		ELSE
			hr.room_orientation
		END orientation,
		case a.rent_type when 'ENTIRE' then
			h.build_area
		ELSE
			hr.room_area
		END build_area,
		a.fitment_type,
		hc.sign_uid,
		su.dep_id as sign_did,
		hc.delay_date,
		su.user_name AS signUserName,
		a.look_remark,
		sysd.dep_name AS signDeptName,
		case a.rent_type when 'ENTIRE' then
		(CASE
		WHEN
		a.apartment_type = 'MANAGE'
		THEN
		(SELECT
		COUNT(house_img_id) apartment_img_count
		FROM
		house_img hi
		WHERE
		hi.house_id = h.house_id
		AND hi.deleted = 0)
		ELSE (SELECT
		COUNT(room_img_id) apartment_img_count
		FROM
		house_room_img hri
		WHERE
		hri.house_id = a.house_id
		AND hri.deleted = 0)
		END)
		 else
		 (
		 SELECT
			COUNT(room_img_id)
			FROM
			house_room_img hri
			WHERE
			hri.room_id = a.room_id
			AND hri.deleted = 0
		  )
		end apartment_img_count,
		(SELECT
		MAX(follow_date) AS apartment_follow_time
		FROM
		follow
		WHERE
		object_type = 'APARTMENT'
		and deleted=0
		and object_id = a.apartment_id) as apartment_follow_time,
		rb.ground_floors,
		rb.building_name,
		rb.suffix,
		rb.house_role,
		h.unit,
		h.house_no,
		h.floor,
		CONCAT(h.floor, '|', rb.underground_floors + rb.ground_floors) AS floor_floors,
		h.property_type,
		h.property_use,
		h.property_name as address,
		(SELECT
		MAX(ac.rent_end_date) AS rent_end_date
		FROM
		apartment_contract ac
		LEFT JOIN
		apartment_contract_relation acr ON acr.contract_id = ac.contract_id

		WHERE
		ac.deleted = 0
		AND (ac.contract_status = 'EFFECTIVE'
		OR ac.contract_status = 'CONTINUED')
		and acr.apartment_id = a.apartment_id
		) as rent_end_date,

		hc.entrust_end_date,
		hc.create_time AS house_contract_create_time,
		CASE a.apartment_type
		WHEN 'MANAGE' THEN 'UNRRESTYLE'
		WHEN 'BRAND' THEN fh.reform_way
		ELSE ''
		END reform_way,
		CASE a.apartment_type
		WHEN 'MANAGE' THEN 'MANAGE'
		WHEN 'BRAND' THEN fh.apartment_kind
		ELSE ''
		END apartment_kind,
		CASE a.apartment_type
		WHEN 'MANAGE' THEN h.rooms
		WHEN 'BRAND' THEN fh.rooms
		ELSE '0'
		END rooms,
		CASE a.apartment_type
		WHEN 'MANAGE' THEN h.livings
		WHEN 'BRAND' THEN fh.livings
		ELSE '0'
		END livings,
		CASE a.apartment_type
		WHEN 'MANAGE' THEN h.kitchens
		WHEN 'BRAND' THEN fh.kitchens
		ELSE '0'
		END kitchens,
		CASE a.apartment_type
		WHEN 'MANAGE' THEN h.bathrooms
		WHEN 'BRAND' THEN fh.bathrooms
		ELSE '0'
		END bathrooms,
		CASE a.apartment_type
		WHEN 'MANAGE' THEN h.balconys
		WHEN 'BRAND' THEN fh.balconys
		ELSE '0'
		END balconys,
		serviceu.user_name AS serviceUserName,
		a.service_uid,
		a.service_did,
		(SELECT
		d.name
		FROM
		sys_district d
		WHERE
		d.code = a.city_code) AS city_name,
		(SELECT
		GROUP_CONCAT(bc.business_circle_name)
		FROM
		business_circle bc
		LEFT JOIN residential_business_circle rbc ON bc.business_circle_id = rbc.business_circle_id
		WHERE
		rbc.residential_id = a.residential_id) business_circle_multi,
		(SELECT
		GROUP_CONCAT(DISTINCT(sdi.dict_value))
		FROM
		sys_dict_item sdi
		INNER JOIN
		house_room_feature hrf ON hrf.feature_code = sdi.dict_e_value
		AND sdi.is_active = '1'
		WHERE
		hrf.room_id = a.room_id) house_room_feature_multi,
		(SELECT
		GROUP_CONCAT(DISTINCT(sdi.dict_e_value))
		FROM
		sys_dict_item sdi
		INNER JOIN
		house_room_feature hrf ON hrf.feature_code = sdi.dict_e_value
		AND sdi.is_active = '1'
		WHERE
		hrf.room_id = a.room_id) house_room_feature_ids,
		(SELECT
		GROUP_CONCAT(sd1.dep_name)
		FROM
		sys_department sd1
		LEFT JOIN residential_department rd1 ON rd1.did = sd1.dep_id
		WHERE
		rd1.residential_id = r.residential_id) residential_dept_response,
		<if test="house_catalogy != null">
		ohc.recommended_title,
		</if>
		ohi.audit_status as issure_audit_status,
		ohi.audit_time
		
	</sql>
	
	<sql id="colPhotoApartmentSQL">
		a.house_contract_id,
		a.room_id,
		hr.room_code,

		a.apartment_id,
		a.residential_id,
		a.building_id,
		a.house_id,
		a.room_id,
		a.apartment_code,
		a.apartment_type,
		a.rent_type,
		a.rent_status,
		a.property,
		a.category,
		a.dealtype,
		a.fire_status,
		fh.fitment_status,
		fh.fitment_style,
		a.look_date,
		a.look_type,
		a.city_code,
		a.area_code,
		a.online_status,
		a.online_time,
		a.online_uid,
		a.activated_time,
		a.activated_type,
		a.activated_uid,
		a.fitment_cost,
		a.entrust_cost,
		a.capital_cost,
		a.apartment_cost,
		a.rent_price,
		asu.dep_id as did,
		a.uid,
		a.remark,
		a.create_time,
		a.create_uid,
		a.deleted,
		r.residential_name,
		sd.`name` AS area_name,
		h.house_code,
		h.property_name as address,
		hr.room_no,
		case a.rent_type when 'ENTIRE' then
			h.orientation
		ELSE
			hr.room_orientation
		END orientation,
		case a.rent_type when 'ENTIRE' then
			h.build_area
		ELSE
			hr.room_area
		END build_area,
		a.fitment_type,
		hc.sign_uid,
		su.dep_id as sign_did,
		hc.delay_date,
		su.user_name AS signUserName,
		a.look_remark,
		sysd.dep_name AS signDeptName,
		case a.rent_type when 'ENTIRE' then
		(CASE
		WHEN
		a.apartment_type = 'MANAGE'
		THEN
		(SELECT
		COUNT(house_img_id) apartment_img_count
		FROM
		house_img hi
		WHERE
		hi.house_id = h.house_id
		AND hi.deleted = 0)
		ELSE (SELECT
		COUNT(room_img_id) apartment_img_count
		FROM
		house_room_img hri
		WHERE
		hri.house_id = a.house_id
		AND hri.deleted = 0)
		END)
		 else
		 (
		 SELECT
			COUNT(room_img_id)
			FROM
			house_room_img hri
			WHERE
			hri.room_id = a.room_id
			AND hri.deleted = 0
		  )
		end apartment_img_count,
		(SELECT
		MAX(follow_date) AS apartment_follow_time
		FROM
		follow
		WHERE
		object_type = 'APARTMENT'
		and deleted=0
		and object_id = a.apartment_id) as apartment_follow_time,
		rb.ground_floors,
		rb.building_name,
		rb.suffix,
		rb.house_role,
		h.unit,
		h.house_no,
		h.floor,
		CONCAT(h.floor, '|', rb.underground_floors + rb.ground_floors) AS floor_floors,
		h.property_type,
		h.property_use,
		(SELECT
		MAX(ac.rent_end_date) AS rent_end_date
		FROM
		apartment_contract ac
		LEFT JOIN
		apartment_contract_relation acr ON acr.contract_id = ac.contract_id

		WHERE
		ac.deleted = 0
		AND (ac.contract_status = 'EFFECTIVE'
		OR ac.contract_status = 'CONTINUED')
		and acr.apartment_id = a.apartment_id
		) as rent_end_date,

		hc.entrust_end_date,
		hc.create_time AS house_contract_create_time,
		CASE a.apartment_type
		WHEN 'MANAGE' THEN 'UNRRESTYLE'
		WHEN 'BRAND' THEN fh.reform_way
		ELSE ''
		END reform_way,
		CASE a.apartment_type
		WHEN 'MANAGE' THEN 'MANAGE'
		WHEN 'BRAND' THEN fh.apartment_kind
		ELSE ''
		END apartment_kind,
		CASE a.apartment_type
		WHEN 'MANAGE' THEN h.rooms
		WHEN 'BRAND' THEN fh.rooms
		ELSE '0'
		END rooms,
		CASE a.apartment_type
		WHEN 'MANAGE' THEN h.livings
		WHEN 'BRAND' THEN fh.livings
		ELSE '0'
		END livings,
		CASE a.apartment_type
		WHEN 'MANAGE' THEN h.kitchens
		WHEN 'BRAND' THEN fh.kitchens
		ELSE '0'
		END kitchens,
		CASE a.apartment_type
		WHEN 'MANAGE' THEN h.bathrooms
		WHEN 'BRAND' THEN fh.bathrooms
		ELSE '0'
		END bathrooms,
		CASE a.apartment_type
		WHEN 'MANAGE' THEN h.balconys
		WHEN 'BRAND' THEN fh.balconys
		ELSE '0'
		END balconys,
		serviceu.user_name AS serviceUserName,
		a.service_uid,
		a.service_did,
		(SELECT
		d.name
		FROM
		sys_district d
		WHERE
		d.code = a.city_code) AS city_name,
		(SELECT
		GROUP_CONCAT(bc.business_circle_name)
		FROM
		business_circle bc
		LEFT JOIN residential_business_circle rbc ON bc.business_circle_id = rbc.business_circle_id
		WHERE
		rbc.residential_id = a.residential_id) business_circle_multi,
		(SELECT
		GROUP_CONCAT(DISTINCT(sdi.dict_value))
		FROM
		sys_dict_item sdi
		INNER JOIN
		house_room_feature hrf ON hrf.feature_code = sdi.dict_e_value
		AND sdi.is_active = '1'
		WHERE
		hrf.room_id = a.room_id) house_room_feature_multi,
		(SELECT
		GROUP_CONCAT(DISTINCT(sdi.dict_e_value))
		FROM
		sys_dict_item sdi
		INNER JOIN
		house_room_feature hrf ON hrf.feature_code = sdi.dict_e_value
		AND sdi.is_active = '1'
		WHERE
		hrf.room_id = a.room_id) house_room_feature_ids,
		(SELECT
		GROUP_CONCAT(sd1.dep_name)
		FROM
		sys_department sd1
		LEFT JOIN residential_department rd1 ON rd1.did = sd1.dep_id
		WHERE
		rd1.residential_id = r.residential_id) residential_dept_response,
		ap.create_time as apply_photo_time,
		ap.finish_time,
		(select user_name from sys_user where user_id=ap.finish_uid) as finishUserName
		
	</sql>
	

	<sql id="entireApartmentSql">

		FROM
		apartment a
		left join sys_user asu on asu.user_id=a.uid
		JOIN residential r ON a.residential_id = r.residential_id
		JOIN residential_building rb ON a.building_id = rb.building_id
		JOIN house h ON a.house_id = h.house_id
		LEFT JOIN sys_district sd ON a.area_code = sd.code
		LEFT JOIN sys_district sd_city ON a.city_code = sd_city.code
		left JOIN house_room hr ON a.room_id = hr.room_id AND hr.deleted = 0 AND hr.is_active = 'Y'
		INNER JOIN house_contract hc ON hc.house_id = h.house_id
		AND hc.contract_id = a.house_contract_id
		AND hc.is_active = 'Y'
		AND hc.deleted = 0
		LEFT JOIN sys_user su ON hc.sign_uid = su.user_id
		LEFT JOIN sys_department sysd ON su.dep_id= sysd.dep_id
		LEFT JOIN sys_user serviceu ON serviceu.user_id = a.service_uid
		LEFT JOIN fitment_house fh ON fh.house_id = h.house_id
		AND fh.contract_id = a.house_contract_id
		INNER JOIN online_house_info ohi ON ohi.apartment_id=a.apartment_id 
		<if test="house_catalogy != null">
					LEFT  JOIN online_house_category ohc ON ohc.info_id=ohi.info_id
		</if>
		<include refid="sqlForList"></include>

	</sql>

	<sql id="photoApartmentSql">

		FROM
		apartment a
		left join sys_user asu on asu.user_id=a.uid
		JOIN residential r ON a.residential_id = r.residential_id
		JOIN residential_building rb ON a.building_id = rb.building_id
		JOIN house h ON a.house_id = h.house_id
		LEFT JOIN sys_district sd ON a.area_code = sd.code
		LEFT JOIN sys_district sd_city ON a.city_code = sd_city.code
		left JOIN house_room hr ON a.room_id = hr.room_id AND hr.deleted = 0 AND hr.is_active = 'Y'
		INNER JOIN house_contract hc ON hc.house_id = h.house_id
		AND hc.contract_id = a.house_contract_id
		AND hc.is_active = 'Y'
		AND hc.deleted = 0
		LEFT JOIN sys_user su ON hc.sign_uid = su.user_id
		LEFT JOIN sys_department sysd ON su.dep_id = sysd.dep_id
		LEFT JOIN sys_user serviceu ON serviceu.user_id = a.service_uid
		LEFT JOIN fitment_house fh ON fh.house_id = h.house_id
		AND fh.contract_id = a.house_contract_id
		INNER JOIN apply_photo ap ON ap.apartment_id=a.apartment_id 

		<include refid="sqlForList"></include>

	</sql>


	<sql id="condEntireApartmentSql">
			
				<if test="apartment_img_count_search != null and apartment_img_count_search == 0">
						and case a.rent_type when 'ENTIRE' then
			(CASE
			WHEN
			a.apartment_type = 'MANAGE'
			THEN
			(SELECT
			COUNT(house_img_id) apartment_img_count
			FROM
			house_img hi
			WHERE
			hi.house_id = h.house_id
			AND hi.deleted = 0)
			ELSE (SELECT
			COUNT(room_img_id) apartment_img_count
			FROM
			house_room_img hri
			WHERE
			hri.house_id = a.house_id
			AND hri.deleted = 0)
			END)
			 else
			 (
			 SELECT
				COUNT(room_img_id)
				FROM
				house_room_img hri
				WHERE
				hri.room_id = a.room_id
				AND hri.deleted = 0
			  )
			end = 0
				</if>
				<if test="apartment_img_count_search != null and apartment_img_count_search == 1">
					and <![CDATA[
					
					case a.rent_type when 'ENTIRE' then
		(CASE
		WHEN
		a.apartment_type = 'MANAGE'
		THEN
		(SELECT
		COUNT(house_img_id) apartment_img_count
		FROM
		house_img hi
		WHERE
		hi.house_id = h.house_id
		AND hi.deleted = 0)
		ELSE (SELECT
		COUNT(room_img_id) apartment_img_count
		FROM
		house_room_img hri
		WHERE
		hri.house_id = a.house_id
		AND hri.deleted = 0)
		END)
		 else
		 (
		 SELECT
			COUNT(room_img_id)
			FROM
			house_room_img hri
			WHERE
			hri.room_id = a.room_id
			AND hri.deleted = 0
		  )
		end >=1 
		
		and case a.rent_type when 'ENTIRE' then
		(CASE
		WHEN
		a.apartment_type = 'MANAGE'
		THEN
		(SELECT
		COUNT(house_img_id) apartment_img_count
		FROM
		house_img hi
		WHERE
		hi.house_id = h.house_id
		AND hi.deleted = 0)
		ELSE (SELECT
		COUNT(room_img_id) apartment_img_count
		FROM
		house_room_img hri
		WHERE
		hri.house_id = a.house_id
		AND hri.deleted = 0)
		END)
		 else
		 (
		 SELECT
			COUNT(room_img_id)
			FROM
			house_room_img hri
			WHERE
			hri.room_id = a.room_id
			AND hri.deleted = 0
		  )
		end <=4
					]]>
				</if>
				<if test="apartment_img_count_search != null and apartment_img_count_search == 2">
					and case a.rent_type when 'ENTIRE' then
		(CASE
		WHEN
		a.apartment_type = 'MANAGE'
		THEN
		(SELECT
		COUNT(house_img_id) apartment_img_count
		FROM
		house_img hi
		WHERE
		hi.house_id = h.house_id
		AND hi.deleted = 0)
		ELSE (SELECT
		COUNT(room_img_id) apartment_img_count
		FROM
		house_room_img hri
		WHERE
		hri.house_id = a.house_id
		AND hri.deleted = 0)
		END)
		 else
		 (
		 SELECT
			COUNT(room_img_id)
			FROM
			house_room_img hri
			WHERE
			hri.room_id = a.room_id
			AND hri.deleted = 0
		  )
		end >=5
				</if>
		
	</sql>

	<!-- 根据自营公寓ID返回整租房源信息 -->
	<select id="selectEntireHouseByApartmentId" parameterType="java.lang.String" resultMap="ApartmentMap">
		SELECT DISTINCT
			a.apartment_id, a.residential_id,a.building_id,a.house_contract_id,a.house_id,a.room_id,a.apartment_code,a.apartment_type,a.rent_type,a.rent_status,a.property,a.category,a.dealtype,a.fire_status,
	        fh.fitment_status,a.look_date,a.look_type,a.city_code,a.area_code,a.online_status,a.online_time,a.online_uid,a.activated_time,a.activated_type,a.look_remark,a.cost_account,
	        a.activated_uid, a.fitment_cost,a.entrust_cost,a.capital_cost,ROUND((a.fitment_cost+a.entrust_cost+a.capital_cost),2) apartment_cost,a.rent_price,asu.dep_id as did,a.uid,a.remark,a.create_time,a.create_uid,a.update_time,a.update_uid,a.deleted,a.check_in_date,
	        sd.`name` as area_name,h.house_code,h.build_area,a.fitment_type,hc.sign_uid, su.dep_id as sign_did,su.user_name as signUserName,
	        sysd.dep_name as signDeptName, r.address,(SELECT count(house_img_id) FROM house_img hi where hi.house_id=h.house_id) as apartment_count,r.residential_name,
			rb.ground_floors,rb.building_name,rb.suffix,rb.house_role, h.unit, h.house_no, CONCAT(h.floor,"|",rb.underground_floors+rb.ground_floors) as floor_floors,
			CASE a.apartment_type
			WHEN 'MANAGE' THEN 'UNRRESTYLE'
			WHEN 'BRAND' THEN fh.reform_way
			ELSE ''
			END reform_way,
			CASE a.apartment_type
			WHEN 'MANAGE' THEN 'MANAGE'
			WHEN 'BRAND' THEN fh.apartment_kind
			ELSE ''
			END apartment_kind,
			CASE a.apartment_type
			WHEN 'MANAGE' THEN h.rooms
	            WHEN 'BRAND' THEN fh.rooms
	            ELSE '0'
			END rooms,
			CASE a.apartment_type
			WHEN 'MANAGE' THEN h.livings
	            WHEN 'BRAND' THEN fh.livings
	            ELSE '0'
			END livings,
			CASE a.apartment_type
			WHEN 'MANAGE' THEN h.kitchens
	            WHEN 'BRAND' THEN fh.kitchens
	            ELSE '0'
			END kitchens,
			CASE a.apartment_type
			WHEN 'MANAGE' THEN h.bathrooms
	            WHEN 'BRAND' THEN fh.bathrooms
	            ELSE '0'
			END bathrooms,
			CASE a.apartment_type
			WHEN 'MANAGE' THEN h.balconys
	            WHEN 'BRAND' THEN fh.balconys
	            ELSE '0'
			END balconys,
			h.property_use,h.property_type,h.orientation,hr.now_status,
			(select d.name from sys_district d where d.code=a.city_code) as city_name,serviceu.user_name as serviceUserName,a.service_uid,a.service_did,
			(SELECT GROUP_CONCAT(sd1.dep_name) FROM sys_department sd1 
		          LEFT JOIN residential_department rd1 on rd1.did=sd1.dep_id
		          WHERE rd1.residential_id=r.residential_id
			) residential_dept_response,
			a.web_manager_uid,
			web.dep_id as web_manager_did
		FROM apartment a
		left join sys_user asu on asu.user_id= a.uid
		LEFT JOIN residential r ON a.residential_id=r.residential_id
		LEFT JOIN residential_building rb ON a.building_id=rb.building_id 
		LEFT JOIN house h ON a.house_id=h.house_id
		LEFT JOIN house_rent hr ON h.house_id = hr.house_id
		LEFT JOIN sys_district sd ON a.area_code=sd.code
		INNER JOIN house_contract hc ON hc.house_id=h.house_id AND hc.contract_id = a.house_contract_id
		LEFT JOIN sys_user su ON hc.sign_uid=su.user_id
		LEFT JOIN sys_user web ON a.web_manager_uid = web.user_id
		LEFT JOIN sys_department sysd ON su.dep_id=sysd.dep_id
		LEFT JOIN sys_user serviceu ON serviceu.user_id=a.service_uid
		<!-- 考虑托管房的情况 -->
		LEFT JOIN fitment_house fh ON fh.house_id=h.house_id AND fh.contract_id=a.house_contract_id
		WHERE a.deleted = 0 and a.apartment_id = #{apartment_id}
	</select>

	<!-- 根据自营公寓ID返回合租房源信息 -->
	<select id="selectShareHouseByApartmentId" parameterType="java.lang.String" resultMap="ApartmentMap">
		SELECT 
			a.apartment_id, a.residential_id,a.building_id,a.house_contract_id,a.house_id,a.room_id,a.apartment_code,a.apartment_type,a.rent_type,a.rent_status,a.property,a.category,a.dealtype,a.fire_status,a.apartment_cost,
	        a.look_date,a.look_type,a.city_code,a.area_code,a.online_status,a.online_time,a.online_uid,a.activated_time,a.activated_type,
	        a.activated_uid, a.fitment_cost,a.entrust_cost,a.capital_cost,a.apartment_cost,a.rent_price,su.dep_id as did,a.uid,a.remark,a.create_time,a.create_uid,a.deleted,a.update_time,a.update_uid,a.check_in_date,
	        r.residential_name,a.look_remark,a.cost_account,
	        fh.fitment_status,fh.apartment_kind,fh.fitment_style,
			h.house_code,h.build_area,a.fitment_type,hc.sign_uid, hc.sign_did,hc.delay_date,su.user_name as belongUserName, sysd.dep_name as belongDeptName, 
			(SELECT count(house_img_id) FROM house_img hi where hi.house_id=h.house_id) as apartment_count,

			(SELECT
				MAX(follow_date) AS apartment_follow_time
			FROM
				follow
			WHERE
				object_type = 'APARTMENT'
				and a.apartment_id = follow.object_id
			) as apartment_follow_time,r.address,sd.`name` as area_name,sd_city.`name` as city_name,
			rb.ground_floors,rb.building_name,rb.suffix,rb.house_role, h.unit, h.house_no, CONCAT(h.floor,"|",rb.underground_floors+rb.ground_floors) as floor_floors, fh.rooms, h.property_use,
			fh.livings,fh.kitchens, fh.bathrooms, fh.balconys,hc.reform_way,a.service_uid,a.service_did,
			hr.room_code,hr.room_no,hr.room_area,hr.room_orientation,hr.original_room_type,hr.decoration_style,
			(SELECT GROUP_CONCAT(sd1.dep_name) FROM sys_department sd1 
		          LEFT JOIN residential_department rd1 on rd1.did=sd1.dep_id
		          WHERE rd1.residential_id=r.residential_id
			) residential_dept_response,
			web_manager_uid,
			web.dep_id as web_manager_did
		FROM apartment a
		LEFT JOIN residential r ON a.residential_id=r.residential_id
		LEFT JOIN residential_building rb ON a.building_id=rb.building_id
		LEFT JOIN house h ON a.house_id=h.house_id
		LEFT JOIN house_room hr ON a.room_id=hr.room_id
		LEFT JOIN sys_district sd ON a.area_code=sd.code
		LEFT JOIN sys_district sd_city ON a.city_code=sd_city.code
		INNER JOIN house_contract hc ON hc.house_id=h.house_id AND hc.contract_id = a.house_contract_id
		LEFT JOIN fitment_house fh ON fh.house_id=h.house_id AND fh.contract_id=hc.contract_id
		LEFT JOIN sys_user su ON a.uid=su.user_id
		LEFT JOIN sys_user web ON a.web_manager_uid=web.user_id
		LEFT JOIN sys_department sysd ON su.dep_id=sysd.dep_id
		
		WHERE a.apartment_id = #{apartment_id} AND hr.public_flag='N'
	</select>

	<!-- 更新公寓信息 -->
	<update id="updateApartmentById" parameterType="com.isz.erp.facade.house.entity.Apartment">
		UPDATE `apartment`
		SET
		 `update_time` = now()
  		 ,`update_uid` = #{update_uid}
  		 <if test="city_code != null and city_code != ''">
  		 	,city_code = #{city_code}
  		 </if>
  		 <if test="area_code != null and area_code != ''">
  		 	,area_code = #{area_code}
  		 </if>
		 <if test="apartment_code != null and apartment_code != ''">
  		 	,apartment_code = #{apartment_code}
  		 </if>
		 <if test="apartment_type != null and apartment_type != ''">
  		 	,apartment_type = #{apartment_type}
  		 </if>
		 <if test="rent_type != null and rent_type != ''">
  		 	,rent_type = #{rent_type}
  		 </if>
		 <if test="rent_status != null and rent_status != ''">
  		 	,rent_status = #{rent_status}
  		 </if>
		 <if test="look_type != null and look_type != ''">
  		 	,look_type = #{look_type}
  		 </if>
  		 	,look_date = #{look_date}
		 <if test="fitment_cost != null">
  		 	,fitment_cost = #{fitment_cost}
  		 </if>
		 <if test="entrust_cost != null">
  		 	,entrust_cost = #{entrust_cost}
  		 </if>
		 <if test="rent_price != null">
  		 	,rent_price = #{rent_price}
  		 </if>
		 <if test="did != null">
  		 	,did = #{did}
  		 </if>
		 <if test="uid != null">
  		 	,uid = #{uid}
  		 </if>
		 <if test="remark != null and remark != ''">
  		 	,remark = #{remark}
  		 </if>
		 <if test="is_active != null and is_active != ''">
  		 	,is_active = #{is_active}
  		 </if>
		 <if test="online_status != null and online_status != ''">
  		 	,online_status = #{online_status}
  		 </if>
		 <if test="online_uid != null">
  		 	,online_uid = #{online_uid}
  		 </if>
		 <if test="online_time != null and online_time != ''">
  		 	,online_time = #{online_time}
  		 </if>
  		 	,activated_type = #{activated_type}
		 <if test="activated_time != null and activated_time != ''">
  		 	,activated_time = #{activated_time}
  		 </if>
		 <if test="activated_uid != null">
  		 	,activated_uid = #{activated_uid}
  		 </if>
  		 <if test="fire_status != null and fire_status != ''">
  		 	,fire_status = #{fire_status}
  		 </if>
  		 <if test="service_uid != null">
  		 	,service_uid = #{service_uid}
  		 </if>
		 <if test="service_did != null">
  		 	,service_did = #{service_did}
  		 </if>
  		 <if test="can_check_in_date != null">
  		 	,check_in_date = #{can_check_in_date}
  		 </if>
  		 <if test="look_remark != null">
  		 	,look_remark = #{look_remark}
  		 </if>
  		 <if test="web_manager_uid != null">
  		 	,web_manager_uid = #{web_manager_uid}
  		 </if>

		WHERE `apartment_id`=#{apartment_id}
	</update>

	<!-- 判断公寓是否有出租合同记录 -->
	<select id="countApartmentContract" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT COUNT(0) FROM apartment a 
		INNER JOIN apartment_contract_relation acr ON a.apartment_id=acr.apartment_id
		WHERE a.apartment_id=#{apartment_id} 
	</select>

	<!-- 查询是否有自营公寓出租合同应收租金数据 -->
	<select id="searchApartmentContractReceivable" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT 1 FROM apartment_contract_receivable cr 
		INNER JOIN apartment_contract ac ON ac.contract_id=cr.contract_id
		LEFT JOIN apartment_contract_relation acr ON acr.contract_id=ac.contract_id
		WHERE acr.apartment_id=#{apartment_id} limit 1
	</select>

	<!-- 查询是否有自营公寓实收租金数据 -->
	<select id="searchApartmentContractReceipts" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT 1 FROM apartment_contract_receipts cr 
		INNER JOIN apartment_contract ac ON ac.contract_id=cr.contract_id
		LEFT JOIN apartment_contract_relation acr ON acr.contract_id=ac.contract_id
		WHERE acr.apartment_id=#{apartment_id} limit 1
	</select>
	<!-- 插入一条数据 -->
	<insert id="insertApartment" parameterType="com.isz.erp.facade.house.entity.Apartment">
		INSERT INTO `apartment`
		(apartment_id,residential_id,building_id,house_contract_id,house_id,room_id,city_code,area_code,apartment_code,apartment_type,
		rent_type,rent_status,look_type,look_date,look_remark,fitment_cost,entrust_cost,capital_cost,apartment_cost,rent_price,
		did,uid,remark,is_active,online_status,online_uid,online_time,web_manager_uid,activated_type,
		activated_time,activated_uid,fire_status,deleted,service_uid,service_did,check_in_date,fitment_type,
		create_time,create_uid,update_time,update_uid,property,category,dealtype)
		VALUES
		(#{apartment_id},#{residential_id},#{building_id},#{house_contract_id},#{house_id},#{room_id},#{city_code},#{area_code},#{apartment_code},#{apartment_type},
		#{rent_type},#{rent_status},#{look_type},#{look_date},#{look_remark},#{fitment_cost},#{entrust_cost},#{capital_cost},#{apartment_cost},#{rent_price},
		#{did},#{uid},#{remark},#{is_active},#{online_status},#{online_uid},#{online_time},#{web_manager_uid},#{activated_type},
		#{activated_time},#{activated_uid},#{fire_status},#{deleted},#{service_uid},#{service_did},#{check_in_date},#{fitment_type},
		#{create_time},#{create_uid},#{update_time},#{update_uid},#{property},#{category},#{dealtype})
	</insert>
	<!-- 未删除的房源公寓 -->
	<select id="selectByHouseIdContractId"
		parameterType="java.util.Map" resultType="com.isz.erp.facade.house.entity.Apartment">
		SELECT
			a.apartment_id,
			a.residential_id,
			a.building_id,
			a.house_contract_id,
			a.house_id,
			a.room_id,
			a.city_code,
			a.area_code,
			a.apartment_code,
			a.apartment_type,
			a.rent_type,
			a.rent_status,
			a.property,
			a.category,
			a.dealtype,
			a.look_type,
			a.look_date,
			a.look_remark,
			a.fitment_cost,
			a.entrust_cost,
			a.capital_cost,
			a.apartment_cost,
			a.rent_price,
			asu.dep_id as id,
			a.uid,
			a.remark,
			a.is_active,
			a.online_status,
			a.online_uid,
			a.online_time,
			a.web_manager_uid,
			a.activated_type,
			a.activated_time,
			a.activated_uid,
			a.fire_status,
			a.deleted,
			a.service_uid,
			a.service_did,
			a.check_in_date,
			a.fitment_type,
			a.create_time,
			a.create_uid,
			a.update_time,
			a.update_uid
		FROM
			apartment AS a
		inner join sys_user asu on asu.user_id=a.uid
		WHERE
			a.house_id=#{house_id} AND a.house_contract_id=#{contract_id} AND a.rent_type='ENTIRE' AND
			a.deleted=0
	</select>
	<!-- 未删除的合租房源公寓 -->
	<select id="selectByRoomIdContractId"
		parameterType="java.util.Map" resultType="com.isz.erp.facade.house.entity.Apartment">
		SELECT
			a.apartment_id,
			a.residential_id,
			a.building_id,
			a.house_contract_id,
			a.house_id,
			a.room_id,
			a.city_code,
			a.area_code,
			a.apartment_code,
			a.apartment_type,
			a.rent_type,
			a.rent_status,
			a.property,
			a.category,
			a.dealtype,
			a.look_type,
			a.look_date,
			a.look_remark,
			a.fitment_cost,
			a.entrust_cost,
			a.capital_cost,
			a.apartment_cost,
			a.rent_price,
			asu.dep_id as did,
			a.uid,
			a.remark,
			a.is_active,
			a.online_status,
			a.online_uid,
			a.online_time,
			a.web_manager_uid,
			a.activated_type,
			a.activated_time,
			a.activated_uid,
			a.fire_status,
			a.deleted,
			a.service_uid,
			a.service_did,
			a.check_in_date,
			a.fitment_type,
			a.create_time,
			a.create_uid,
			a.update_time,
			a.update_uid
		FROM
			apartment AS a
		inner join sys_user asu on asu.user_id= a.uid
		WHERE
			a.room_id=#{room_id} AND a.house_contract_id=#{contract_id} AND a.rent_type='SHARE' AND
			a.deleted=0
	</select>
	<!-- 未删除的公寓 -->
	<select id="selectByHouseId" parameterType="java.lang.String" resultType="java.lang.Integer">
	select 
		count(*) 
	from apartment as a 
	INNER JOIN house_contract hc ON hc.house_id = a.house_id
	AND hc.contract_id = a.house_contract_id
	AND hc.is_active = 'Y'
	AND hc.deleted = 0
	where a.house_id=#{house_id} AND a.deleted=0 AND a.is_active="Y"
	</select>
	<!-- 删除合租房源 -->
	<update id="deleteByHouseIdAndRoomId" parameterType="java.util.Map">
		UPDATE apartment a
		INNER JOIN house h ON h.house_id=a.house_id
		SET a.`deleted`=1, a.is_active='N', a.update_time=#{update_time}, a.update_uid=#{update_uid}
		WHERE a.room_id=#{room_id} AND a.house_id=#{house_id} AND a.room_id IS NOT NULL
	</update>
	<!-- 根据委托合同ID返回出租房源的所有公寓 -->
	<select id="selectByHouseContractId"
			parameterType="java.lang.String" resultType="com.isz.erp.facade.house.entity.Apartment">
		SELECT
		a.apartment_id,
		a.residential_id,
		a.building_id,
		a.house_contract_id,
		a.house_id,
		a.room_id,
		a.city_code,
		a.area_code,
		a.apartment_code,
		a.apartment_type,
		a.rent_type,
		a.rent_status,
		a.property,
		a.category,
		a.dealtype,
		a.look_type,
		a.look_date,
		a.look_remark,
		a.fitment_cost,
		a.entrust_cost,
		a.capital_cost,
		a.apartment_cost,
		a.rent_price,
		asu.dep_id as did,
		a.uid,
		a.remark,
		a.is_active,
		a.online_status,
		a.online_uid,
		a.online_time,
		a.web_manager_uid,
		a.activated_type,
		a.activated_time,
		a.activated_uid,
		a.fire_status,
		a.deleted,
		a.service_uid,
		a.service_did,
		a.check_in_date,
		a.fitment_type,
		a.create_time,
		a.create_uid,
		a.update_time,
		a.update_uid
		FROM
		  apartment AS a
		 inner join sys_user asu on asu.user_id=a.uid
		WHERE
		  a.house_contract_id=#{contract_id}
		  AND
		  a.deleted=0
		ORDER BY a.create_time DESC
	</select>
	<!-- 批量更新公寓状态 -->
	<update id="batchApartmentExpire" parameterType="java.lang.String">
		update Apartment set deleted=1 where house_contract_id in (#{house_contract_id})
	</update>
	<!-- 根据委托合同id和房源编号查找apartment -->
	<select id="selectApartmentByContractIdAndHouseCode" resultType="java.lang.Integer">
	select count(1) from apartment where house_contract_id=(#{0}) and apartment_code=#{1}
	 </select>
	<!-- 根据小区ID获取所有房源信息 -->
	<select id="searchApiApartment" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.house_id houseId,
			r.residential_name premName,
			rb.building_name buildingName,
			h.unit unitName,
			h.house_no houseNo,
			sdi.dict_value roomNum
		FROM apartment a
		INNER JOIN house h ON a.house_id=h.house_id
		INNER JOIN residential r ON r.residential_id=h.residential_id
		INNER JOIN residential_building rb ON rb.building_id=h.building_id
		LEFT JOIN house_room hr On hr.room_id=a.room_id AND hr.deleted=0
		LEFT JOIN sys_dict_item sdi ON sdi.dict_code='RoomNo' AND sdi.dict_key=hr.room_no
		WHERE a.deleted=0 AND a.is_active='Y' AND h.deleted=0 
			AND r.residential_id=#{premId}
		ORDER BY rb.building_name, h.unit, h.house_no
	</select>
	<select id="selectListByHouseId" parameterType="java.lang.String" resultType="com.isz.erp.facade.house.entity.Apartment">
		SELECT * FROM apartment WHERE deleted=0 AND is_active='Y' AND house_id=#{house_id}
	</select>
	
		<!-- 根据apartmentID查询官网维护人 -->
	<select id="selectApartmentWebUser" parameterType="java.lang.String" resultType="com.isz.erp.facade.user.entity.SysUser">
		SELECT
			s.*, sd.business_type
		FROM
			apartment a
		LEFT JOIN house_contract ac ON ac.house_id = a.house_id AND ac.is_active = 'Y'
		LEFT JOIN sys_user s ON ac.sign_uid = s.user_id
		LEFT JOIN sys_department sd ON s.dep_id = sd.dep_id
		WHERE
			a.apartment_id = #{0}
			LIMIT 0,1
	</select>

	<!-- 预定房源 整租合租列表 -->
	<select id="countSearchBookAvailabilityApartment" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT COUNT(1) <include refid="bookAvailabilityApartmentSQL"></include>
	</select>
	<select id="searchBookAvailabilityApartmentList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.apartment_id,
			a.rent_status,
			a.category,
			a.property,
			a.category,
			a.dealtype,
			a.apartment_code,
			CONCAT_WS('',r.residential_name,rb.building_name,IFNULL(sdi.dict_value,''),h.house_no,IFNULL(sdi2.dict_value,'')) property_address,
			'APARTMENT' object_type,
			a.apartment_type,
			a.rent_type,
			a.rent_price,
			su.dep_id as did,
			a.uid,
			sd.dep_name did_name,
			su.user_name uid_name,
			a.update_time
			<include refid="bookAvailabilityApartmentSQL"></include>
			<if test="null != sort and sort != ''">
				ORDER BY ${sort}
				<if test="null != order and order != ''">
					${order}
				</if>
			</if>
	</select>
	<sql id="bookAvailabilityApartmentSQL">
		FROM apartment a
		INNER JOIN house_contract hc ON hc.contract_id=a.house_contract_id
		INNER JOIN house h ON h.house_id=a.house_id
		INNER JOIN residential r ON a.residential_id=r.residential_id
		INNER JOIN residential_building rb ON a.building_id=rb.building_id
		LEFT JOIN sys_dict_item sdi ON sdi.dict_code='Suffix' AND sdi.dict_e_value=rb.suffix
		LEFT JOIN house_room hr ON hr.room_id=a.room_id
		LEFT JOIN sys_dict_item sdi2 ON sdi2.dict_code='RoomNo' AND sdi2.dict_e_value=hr.room_no
		<!-- LEFT JOIN sys_department sd ON sd.dep_id=a.did -->
		LEFT JOIN sys_user su ON su.user_id=a.uid
		LEFT JOIN sys_department sd ON sd.dep_id=su.dep_id
		<where>
			<trim prefixOverrides="and">
				and a.deleted=0 and hc.is_active='Y' and hc.deleted=0
				<if test="null != residential_name_house_code_search and '' != residential_name_house_code_search">
					and (r.residential_name like CONCAT('%','${residential_name_house_code_search}','%')
					or a.apartment_code like CONCAT('%','${residential_name_house_code_search}','%')
					or r.byname like CONCAT('%','${residential_name_house_code_search}','%' )
					or r.address like CONCAT('%','${residential_name_house_code_search}','%' )
					)
				</if>
				<if test="null != building_name_search and '' != building_name_search">
					and rb.building_name like CONCAT('%','${building_name_search}','%')
				</if>
				<if test="null != unit_search and '' != unit_search">
					and h.unit like CONCAT('%','${unit_search}','%')
				</if>
				<if test="null != house_no_search and '' != house_no_search">
					and h.house_no like CONCAT('%','${house_no_search}','%')
				</if>
				<if test="null != rent_type_search and '' != rent_type_search">
					and a.rent_type=#{rent_type_search}
				</if>
				<if test="null != city_code_search and '' != city_code_search">
					and a.city_code in (${city_code_search})
				</if>
				<if test="null != status_sql_search and '' != status_sql_search">
					and (${status_sql_search})
				</if>
			</trim>
		</where>
	</sql>

	<!-- 待定价房源列表 -->
	<select id="searchPricingApartment" parameterType="java.lang.String" resultType="java.util.Map">
		SELECT
			a.apartment_id,
			hr.room_no,
			hr.room_orientation,
			hr.room_area,
			(
				SELECT GROUP_CONCAT(DISTINCT(sdi.dict_value))
				FROM house_room_func hrf INNER JOIN sys_dict_item sdi ON hrf.func_type=sdi.dict_e_value AND sdi.dict_code='HouseRoomFuncType'
				WHERE hrf.room_id=a.room_id
			) func_type_desc
		 FROM apartment a
		 INNER JOIN house_room hr ON hr.room_id=a.room_id
		 LEFT JOIN house_room_func  hrf ON hrf.room_id=a.room_id
		 WHERE a.deleted=0 AND a.house_contract_id = (SELECT house_contract_id FROM apartment WHERE apartment_id=#{apartment_id})
		 GROUP BY a.apartment_id
	</select>

	<!-- 更新出租状态或房源类别 -->
	<update id="updateApartmentStatusCategory" parameterType="com.isz.erp.facade.house.entity.Apartment">
		UPDATE apartment a SET a.update_time=#{update_time},a.update_uid=#{update_uid}
		<if test="null != rent_status and '' != rent_status">
			,a.rent_status=#{rent_status}
		</if>
		<if test="null != category">
			,a.category=#{category}
		</if>
		WHERE a.apartment_id=#{apartment_id}
	</update>
</mapper>
