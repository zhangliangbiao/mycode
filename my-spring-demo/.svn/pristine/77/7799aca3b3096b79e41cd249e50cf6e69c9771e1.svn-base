package com.isz.erp.house.service.impl;

import com.isz.erp.common.page.PagingHelper;
import com.isz.erp.common.util.IszLogger;
import com.isz.erp.common.util.ResultMsg;
import com.isz.erp.common.util.ResultObjectMsg;
import com.isz.erp.facade.house.entity.Image;
import com.isz.erp.facade.house.entity.ResidentialBuilding;
import com.isz.erp.facade.house.entity.ResidentialExcelProcess;
import com.isz.erp.facade.house.service.UploadService;
import com.isz.erp.facade.user.entity.SysUser;
import com.isz.erp.house.biz.ResidentialImportBiz;
import com.isz.erp.house.biz.UploadServiceBiz;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import java.util.Map;

/**
 * 上传文件接口实现类
 *
 * @author SZP * zhipenglees@gmail.com
 * @version 1.0 *
 * @date 创建时间：2016年1月26日 下午4:15:28 *
 * @instruction 说明：上传文件接口实现类
 */
@Service("uploadServiceFacade")
public class UploadServiceFacade implements UploadService {

    @Autowired
    private UploadServiceBiz uploadServiceBiz;
    @Autowired
    private ResidentialImportBiz residentialImportBiz;

    @Override
    public ResultObjectMsg<Image> uploadImage(SysUser sysUser, String bucketName, String rootPath,
                                              MultipartFile multipartFile) {
        try {
            return uploadServiceBiz.uploadImage(sysUser, bucketName, rootPath, multipartFile);
        } catch (Exception e) {
            IszLogger.error("UploadServiceFacade.uploadImage", e);
            return new ResultObjectMsg<Image>(e.getMessage());
        }
    }

    @Override
    public Image saveUploadImage(Image image) {
        try {
            return uploadServiceBiz.saveUploadImage(image);
        } catch (Exception e) {
            IszLogger.error("UploadServiceFacade.saveUploadImage", e);
        }
        return null;
    }

    @Override
    public ResultObjectMsg<Map<String, Object>> saveApiUploadImage(Map<String, Object> apiParams) {
        try {
            return uploadServiceBiz.saveApiUploadImage(apiParams);
        } catch (Exception e) {
            IszLogger.error("UploadServiceFacade.saveApiUploadImage", e);
            return new ResultObjectMsg<Map<String, Object>>(e.getMessage());
        }
    }

    @Override
    public ResultMsg uploadExcel(SysUser sysUser, String bucketName, String rootPath, Map<String, Object> pageData) {
        try {
            return residentialImportBiz.uploadExcel(sysUser, bucketName, rootPath, pageData);
        } catch (Exception e) {
            IszLogger.error("UploadServiceFacade.uploadExcel", e);
            return new ResultMsg().createErrorMsg(e.getMessage());
        }

    }

    @Override
    public ResultObjectMsg<PagingHelper<ResidentialExcelProcess>> searchUploadExcelProcess(
            Map<String, Object> pageData) {
        try {
            return residentialImportBiz.searchExcelUploadHis(pageData);
        } catch (Exception e) {
            IszLogger.error("UploadServiceFacade.searchUploadExcelProcess", e);
            return new ResultObjectMsg<PagingHelper<ResidentialExcelProcess>>().createErrorMsg(e.getMessage());
        }
    }

}
