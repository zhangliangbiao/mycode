<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.isz.erp.house.mapper.ResidentialMapper">
  <resultMap id="ResidentialBaseMap" type="com.isz.erp.facade.house.entity.Residential">
    <id column="residential_id" property="residential_id"/>
    <result column="city_code" property="city_code"/>
    <result column="area_code" property="area_code"/>
    <result column="residential_name" property="residential_name"/>
    <result column="address" property="address"/>
    <result column="byname" property="byname"/>
    <result column="property_type" property="property_type"/>
    <result column="property_use" property="property_use"/>
    <result column="property_company" property="property_company"/>
    <result column="property_fee" property="property_fee"/>
    <result column="build_date" property="build_date"/>
    <result column="build_area" property="build_area"/>
    <result column="totle_buildings" property="totle_buildings"/>
    <result column="metro_stations" property="metro_stations"/>
    <result column="bus_stations" property="bus_stations"/>
    <result column="lng" property="lng"/>
    <result column="lat" property="lat"/>
    <result column="plot_ratio" property="plot_ratio"/>
    <result column="green_rate" property="green_rate"/>
    <result column="parking_amount" property="parking_amount"/>
    <result column="other_info" property="other_info"/>
    <result column="remark" property="remark"/>
    <result column="deleted" property="deleted"/>
    <result column="create_time" property="create_time"/>
    <result column="create_uid" property="create_uid"/>
    <result column="update_time" property="update_time"/>
    <result column="update_uid" property="update_uid"/>
    <result column="area_name" property="area_name"/>
	<result column="city_name" property="city_name"/>
	<result column="total_unit_count" property="total_unit_count"/>
	<result column="total_house_count" property="total_house_count"/>

  	<result column="business_circle" property="business_circle"/>
     
	 <collection property="taBusinessCircleList" ofType="com.isz.erp.facade.house.entity.BusinessCircle"
	    	column="residential_id" select="com.isz.erp.house.mapper.BusinessCircleMapper.selectBusidessCircleByResiId">
	</collection>
	<collection property="taDepartList" ofType="com.isz.erp.facade.user.entity.SysDepart"
	 		column="residential_id" select="com.isz.erp.house.mapper.ResidentialMapper.selectDeptByResiId">
	</collection> 
	
	<collection property="residentialImgList" ofType="com.isz.erp.facade.house.entity.ResidentialImg"
	 		column="residential_id" select="com.isz.erp.house.mapper.ResidentialMapper.selectImageByResiId">
	</collection> 

 </resultMap>
 
    <select id="selectDeptByResiId" parameterType="java.lang.String"  resultType="com.isz.erp.facade.user.entity.SysDepart">
	    SELECT a.dep_id,a.dep_name,a.parent_id FROM sys_department a WHERE a.dep_id in(
           SELECT t.did FROM residential_department t WHERE t.residential_id = #{residential_id})
	</select>
	<select id="selectImageByResiId"  parameterType="java.lang.String" resultType="com.isz.erp.facade.house.entity.ResidentialImg">
	   	SELECT
			t.residential_img_id,t.img_id,t.residential_id,t.img_name,t.create_time,t.create_uid,t.sort,i.src,
			su.user_name as create_user,sd.dep_name as create_dep
		FROM
			residential_img t
		INNER JOIN image i ON i.img_id = t.img_id
		LEFT JOIN sys_user su on t.create_uid = su.user_id
		LEFT JOIN sys_department sd on sd.dep_id = su.dep_id
		WHERE
			t.residential_id = #{residential_id}
		ORDER BY IF(ISNULL(t.sort),1,0),t.sort ASC
	</select>
    
    <sql id="listsql">
	  	FROM residential t
   		<!-- LEFT JOIN residential_department s ON s.residential_id = t.residential_id 
 		LEFT JOIN sys_department sd on sd.dep_id = s.did
  		LEFT JOIN residential_business_circle m ON t.residential_id = m.residential_id
 		LEFT JOIN business_circle c ON m.business_circle_id = c.business_circle_id
 		LEFT JOIN residential_img i ON i.residential_id = t.residential_id
        LEFT JOIN image img ON i.img_id = img.img_id  -->
        LEFT JOIN sys_district disArea ON t.area_code = disArea.code
        LEFT JOIN sys_district disCity ON t.city_code = disCity.code
        WHERE t.deleted = 0 
        <if test="taBusinessCircleList != null and taBusinessCircleList != ''">
	        AND EXISTS( SELECT 
	            1
	        FROM
	            residential_business_circle m
	                LEFT JOIN
	            business_circle c ON m.business_circle_id = c.business_circle_id
	        WHERE
	            t.residential_id = m.residential_id
	        and m.business_circle_id in (${taBusinessCircleList}))
        </if>
        
        <if test="taDepartList != null and taDepartList !=''">
	         AND EXISTS( SELECT 
	            1
	        FROM
	            residential_department s
	                LEFT JOIN
	            sys_department sd ON sd.dep_id = s.did
	        WHERE
	            s.residential_id = t.residential_id
	        and s.did in (select dept_flat.child_id from sys_department_flat dept_flat where dept_flat.dept_id in (${taDepartList})))
        </if>
		<if test="city_code != null and city_code != ''"> and t.city_code = #{city_code} </if>
		<if test="area_code != null and area_code != ''"> and t.area_code in (${area_code}) </if>
		<if test="property_type != null and property_type != ''"> and t.property_type in(${property_type}) </if>
		<if test="residential_name != null and residential_name != ''"> and (t.residential_name LIKE CONCAT('%',#{residential_name},'%') or t.byname LIKE CONCAT('%',#{residential_name},'%')) </if>
		<if test="address != null and address != ''"> and t.address LIKE CONCAT('%',#{address},'%') </if>
		<if test="byname != null and byname != ''"> and t.byname LIKE CONCAT('%',#{byname},'%') </if>
		<if test="sort != null and sort !=''">order by ${sort}</if>
		<if test="order != null and order !=''">${order}</if>
		<if test="sort == null and sort ==''">order by t.create_time</if>
		<if test="order == null and order ==''">desc</if>
    </sql>
    
  	<!-- 查询楼盘字典信息 -->
	<select id="searchResidentialList" parameterType="Map" resultMap="ResidentialBaseMap">
		SELECT t.residential_id,t.city_code,t.area_code,t.residential_name,t.address,t.property_type,t.property_use,t.property_company,
		t.property_fee,t.build_date,t.totle_buildings,t.build_area,t.metro_stations,t.bus_stations,t.lng,t.lat,t.plot_ratio,t.green_rate,t.parking_amount,t.other_info,t.remark,
		t.deleted,t.create_time,t.create_uid,t.update_time,t.update_uid,t.byname,t.is_show,
		<!-- 	sd.dep_id,sd.dep_name,sd.parent_id,
            c.business_circle_id,
            c.business_circle_name,
            i.residential_img_id,
            i.img_id,
            i.img_name, -->
		disArea.name as area_name,
		disCity.name as city_name,
		(
		SELECT
		GROUP_CONCAT(bc.business_circle_name)
		FROM
		residential_business_circle rbc
		INNER JOIN business_circle bc ON bc.business_circle_id = rbc.business_circle_id
		WHERE rbc.residential_id = t.residential_id
		) business_circle
	  	<include refid="listsql"></include>
	</select>
	
	
	<!-- 查询楼盘字典数量 -->
	<select id="countSearchResidential" parameterType="Map" resultType="java.lang.Integer">
	     select count(1) <include refid="listsql"></include>
	</select>
	
	<!-- 保存楼盘 -->
	<insert id="saveResidential" parameterType="com.isz.erp.facade.house.entity.Residential">
        INSERT INTO residential (residential_id, city_code, byname, area_code,residential_name, address,property_type,property_use, 
                                 property_company,property_fee,build_date,build_area,metro_stations,bus_stations,lng,lat,plot_ratio,green_rate,
                                 parking_amount,other_info,remark,deleted,create_time,create_uid,update_time,update_uid,totle_buildings,total_unit_count,total_house_count)
        VALUES (#{residential_id},#{city_code},#{byname},#{area_code},#{residential_name},#{address},#{property_type},#{property_use},
                #{property_company},#{property_fee},#{build_date},#{build_area},#{metro_stations},#{bus_stations},#{lng},#{lat},#{plot_ratio}
                ,#{green_rate},#{parking_amount},#{other_info},#{remark},#{deleted},now(),#{create_uid},now(),#{update_uid},#{totle_buildings},#{total_unit_count},#{total_house_count})
  </insert>
  
  <!-- 删除楼盘 -->
  <update id="deleteResidential4Update" parameterType="java.util.Map">
      UPDATE residential s SET s.deleted=1, s.update_uid =#{update_uid}, s.update_time = now() WHERE s.residential_id = #{residential_id}
  </update>
   <!-- 删除图片 -->
  <update id="deleteResidentialImg4Update" parameterType="java.util.Map">
      UPDATE residential_img s SET s.deleted=1 WHERE s.residential_id = #{residential_id}
  </update>
  <!-- 删除楼盘 部门关联关系 -->
  <delete id="deleteResidentialDepartment" parameterType="java.util.Map">
      delete from residential_department  WHERE residential_id = #{residential_id}
  </delete>
   <!-- 删除楼盘 商圈关联关系 -->
  <delete id="deleteResidentialBusinessCircle" parameterType="java.util.Map">
      delete from residential_business_circle  WHERE residential_id = #{residential_id}
  </delete>
   <!-- 删除楼盘下房号 -->
  <delete id="deleteResidentialBuildingHouseNo" parameterType="java.util.Map">
      delete a.* from residential_building_house_no a,(SELECT building_id from residential_building rb where rb.residential_id= #{residential_id}) b
       where a.building_id=b.building_id
  </delete>
  <!-- 删除楼盘 层 -->
  <delete id="deleteResidentialBuildingFloor" parameterType="java.util.Map">
      delete a.* from residential_building_floor a,(SELECT building_id from residential_building rb where rb.residential_id= #{residential_id}) b
       where a.building_id=b.building_id
  </delete>
   <!-- 删除楼盘单元 -->
  <delete id="deleteResidentialBuildingUnit" parameterType="java.util.Map">
      delete a.* from residential_building_unit a,(SELECT building_id from residential_building rb where rb.residential_id= #{residential_id}) b
       where a.building_id=b.building_id
  </delete>
  <!-- 删除楼盘栋座 -->
 <update id="deleteResidentialBuilding4Update" parameterType="java.util.Map">
      UPDATE residential_building s SET s.deleted=1, s.update_uid =#{update_uid}, s.update_time = now() WHERE s.residential_id = #{residential_id}
  </update>
  <!-- 查询楼盘详情 -->
  <select id="selectResidentialDetail" parameterType="java.lang.String" resultMap="ResidentialBaseMap">
       SELECT t.residential_id,t.city_code,sdis.name AS city_name,t.area_code,t.residential_name,t.address,t.property_type,t.property_use,t.property_company,
	  	t.property_fee,t.build_date,t.totle_buildings,t.build_area,t.metro_stations,t.bus_stations,t.lng,t.lat,t.plot_ratio,t.green_rate,t.parking_amount,t.other_info,t.remark,
	  	t.deleted,t.create_time,t.create_uid,t.update_time,t.update_uid,t.byname,t.total_unit_count,t.total_house_count,
	  	sd.dep_id,sd.dep_name,sd.parent_id,c.business_circle_id,c.business_circle_name,i.residential_img_id,i.img_id,i.img_name,dis.name as area_name 
        FROM residential t 
  		LEFT JOIN residential_department s ON s.residential_id = t.residential_id
 		LEFT JOIN sys_department sd on sd.dep_id = s.did
  		LEFT JOIN residential_business_circle m ON t.residential_id = m.residential_id
 		LEFT JOIN business_circle c ON m.business_circle_id = c.business_circle_id
 		LEFT JOIN residential_img i ON i.residential_id = t.residential_id
        LEFT JOIN image img ON i.img_id = img.img_id
        LEFT JOIN sys_district dis ON t.area_code = dis.code
        LEFT JOIN sys_district sdis ON t.city_code = sdis.code
 		WHERE t.deleted = 0 AND t.residential_id = #{residential_id}
 		group by t.residential_id
  </select>
  
  	<!-- 单个楼盘 -->
  	<select id="selectByResidentialId" parameterType="java.lang.String" resultMap="ResidentialBaseMap">
  		SELECT t.residential_id,t.city_code,t.area_code,t.residential_name,t.address,t.property_type,t.property_use,t.property_company,
	  		t.property_fee,t.build_date,t.totle_buildings,t.build_area,t.metro_stations,t.bus_stations,t.lng,t.lat,t.plot_ratio,t.green_rate,t.parking_amount,t.other_info,t.remark,
	  		t.deleted,t.create_time,t.create_uid,t.update_time,t.update_uid,t.byname
	  	FROM residential t 
	  	WHERE t.deleted = 0 AND t.residential_id = #{residential_id}
  	</select>
  	
  	<select id="checkResidentialNameHave" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT count(a.residential_id) 
        FROM residential a 
        WHERE (a.residential_name=#{residential_name} OR find_in_set(a.byname, #{residential_name}))
        AND a.city_code = #{city_code}
        AND a.deleted=0
        <if test="residential_id != null and residential_id != ''">
            AND a.residential_id <![CDATA[ <> ]]> #{residential_id}
        </if>
  	</select>
  	
  	<select id="selectByDepId" parameterType="java.lang.String" resultType="com.isz.erp.facade.house.entity.Residential">
  		SELECT DISTINCT r.* FROM residential r
		INNER JOIN residential_department rd ON r.residential_id=rd.residential_id
		WHERE r.deleted=0 AND rd.did=#{dep_id} LIMIT 1
  	</select>
  	<!-- 楼盘下所有的出租房源 -->
  	<select id="searchHouseListByResidentialId" parameterType="java.lang.String" resultType="com.isz.erp.facade.house.entity.House">
  	SELECT * from house where residential_id=#{residential_id} and deleted=0
  	</select>
  	<!-- 楼盘下所有的公寓房源 -->
  	<select id="searchApartmentListByResidentialId" parameterType="java.lang.String" resultType="com.isz.erp.facade.house.entity.Apartment">
  	SELECT * from apartment where residential_id=#{residential_id}
  	</select>
	<!-- 根据小区名称获取楼盘列表 -->
	<select id="searchApiResidential" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT r.residential_id id, r.residential_name premName FROM residential r WHERE r.deleted=0
		<if test="null != premName and '' != premName">
			AND r.residential_name LIKE CONCAT('%',#{premName},'%')
		</if>
	</select>
	<select id="getIn" resultType="com.isz.erp.facade.house.entity.ResidentialCopeBig">
		select * from residential_cope_big
	</select>
	
	<select id="getResidentialExcelData" resultType="com.isz.erp.facade.house.entity.ResidentialExcelData">
		select * from residential_excel_data
	</select>
	<select id="getUnitExcelData" resultType="com.isz.erp.facade.house.entity.UnitExcelData">
		select * from unit_excel_data 
	</select>
	<select id="selectResidentialByResidentialExcelData" parameterType="java.lang.String" resultType="java.lang.Integer">
	
	select count(*) from residential where city_code=#{2} and area_code=#{1} and residential_name=#{0}
	 
	</select>
	<select id="selectResidential" parameterType="java.lang.String" resultType="com.isz.erp.facade.house.entity.Residential">
	
	select * from residential where city_code=#{2} and area_code=#{1} and residential_name=#{0} limit 1
	</select>

	<!-- 楼盘下拉列表 -->
	<select id="searchResidentialListForSelect" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT tt.* FROM (
				SELECT
				r.residential_id id,
				r.residential_id,
				CONCAT_WS('',r.residential_name,
				CASE WHEN r.byname IS NOT NULL AND r.byname != ''
				THEN CONCAT_WS('','(',r.byname,')')
				ELSE '' END
				) residential_name_show,
				r.residential_name,
				r.city_code,
				r.area_code,
				GROUP_CONCAT(DISTINCT(rbc.business_circle_id)) business_circle_id,
				GROUP_CONCAT(DISTINCT(bc.business_circle_name)) business_circle_name,
				sd1.`name` city_name,
				sd2.`name` area_name,
				r.address,
				IFNULL(GROUP_CONCAT(rd1.did),'-1') sort_index,
				r.create_time,
				(SELECT GROUP_CONCAT(sd.dep_name) FROM sys_department sd INNER JOIN residential_department rd ON sd.dep_id=rd.did WHERE rd.residential_id=r.residential_id) dep_name
			FROM residential r
			INNER JOIN residential_business_circle rbc ON rbc.residential_id=r.residential_id
			INNER JOIN business_circle bc ON bc.business_circle_id=rbc.business_circle_id
			INNER JOIN sys_district sd1 ON sd1.`code`=r.city_code
			INNER JOIN sys_district sd2 ON sd2.`code`=r.area_code
			LEFT JOIN residential_department rd1 ON rd1.residential_id=r.residential_id
			WHERE r.deleted=0 and r.is_show=1
			<if test="null != q_search and '' != q_search">
				AND (r.residential_name LIKE CONCAT('%',#{q_search},'%') or r.address LIKE CONCAT('%',#{q_search},'%') or r.byname LIKE CONCAT('%',#{q_search},'%'))
			</if>
			<if test="null != city_code_search and '' != city_code_search">
				AND r.city_code=#{city_code_search}
			</if>
			GROUP BY r.residential_id ) tt
		ORDER BY find_in_set(#{user_dep_id}, tt.sort_index)  DESC, tt.create_time DESC
	</select>
	<select id="countSearchResidentialForSelect" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT
			COUNT(r.residential_id)
		FROM residential r
		WHERE r.deleted=0
		<if test="null != q_search and '' != q_search">
			AND (r.residential_name LIKE CONCAT('%',#{q_search},'%') or r.address LIKE CONCAT('%',#{q_search},'%') or r.byname LIKE CONCAT('%',#{q_search},'%'))
		</if>
		<if test="null != city_code_search and '' != city_code_search">
			AND r.city_code=#{city_code_search}
		</if>
	</select>
	
	<select id="selectSysDepIdByResidentialId" parameterType="String" resultType="String">
		SELECT rd.did from residential_department rd where rd.residential_id=#{residential_id} limit 1
	</select>
</mapper>