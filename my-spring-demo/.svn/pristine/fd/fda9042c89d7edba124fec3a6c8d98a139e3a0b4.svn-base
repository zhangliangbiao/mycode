package com.isz.erp.house.service.impl;

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.isz.erp.common.page.PagingHelper;
import com.isz.erp.common.util.IszLogger;
import com.isz.erp.common.util.ResultMsg;
import com.isz.erp.common.util.ResultObjectMsg;
import com.isz.erp.facade.house.entity.Residential;
import com.isz.erp.facade.house.entity.ResidentialCorrection;
import com.isz.erp.facade.house.service.ResidentialService;
import com.isz.erp.facade.user.entity.SysUser;
import com.isz.erp.house.biz.ResidentialServiceBiz;

/**
 * @author WangShuo *
 * @version 1.0 *
 * @date 创建时间：2016年1月12日 下午6:26:33 *
 * @instruction 说明：
 */
@Service("residentialServiceFacade")
public class ResidentialServiceFacade implements ResidentialService {

    @Autowired
    private ResidentialServiceBiz residentialServiceBiz;

    /**
     * 查询楼盘详情
     *
     * @param data
     * @return
     */
    public ResultObjectMsg<PagingHelper<Residential>> searchResidentialList(Map<String, Object> data) {
        try {
            return residentialServiceBiz.searchResidentialList(data);
        } catch (Exception e) {
            IszLogger.error("ResidentialServiceFacade.searchResidentialList", e);
            return new ResultObjectMsg<PagingHelper<Residential>>(e.getMessage());
        }
    }

    /**
     * 保存楼盘信息
     *
     * @param taResidential
     */
    public ResultMsg saveResidential(Residential taResidential, SysUser user) {
        try {
            return residentialServiceBiz.saveResidential(taResidential, user);
        } catch (Exception e) {
            IszLogger.error("ResidentialServiceFacade.saveResidential", e);
            return ResultMsg.createErrorMsg(e.getMessage());
        }
    }

    /**
     * 删除楼盘信息
     *
     * @param residential_id
     */
    public ResultMsg deleteResidential(String residential_id, SysUser user) {
        try {
            return residentialServiceBiz.deleteResidential(residential_id, user);
        } catch (Exception e) {
            IszLogger.error("ResidentialServiceFacade.deleteResidential", e);
            return ResultMsg.createErrorMsg(e.getMessage());
        }
    }

    /**
     * 查询楼盘详情
     *
     * @param residential_id
     * @return
     */
    public ResultObjectMsg<Residential> selectResidentialDetail(String residential_id) {
        try {
            return residentialServiceBiz.selectResidentialDetail(residential_id);
        } catch (Exception e) {
            IszLogger.error("ResidentialServiceFacade.selectResidentialDetail", e);
            return new ResultObjectMsg<Residential>(e.getMessage());
        }
    }

    /**
     * 保存楼盘图片信息
     *
     * @param taResidential
     */
    @Override
    public ResultMsg saveResidentialImg(Residential taResidential, SysUser user) {
        try {
            return residentialServiceBiz.saveResidentialImg(taResidential, user);
        } catch (Exception e) {
            IszLogger.error("ResidentialServiceFacade.saveResidentialImg", e);
            return ResultMsg.createErrorMsg(e.getMessage());
        }
    }

    @Override
    public ResultMsg checkResidentialNameHave(String residential_name) {
        try {
            return residentialServiceBiz.checkResidentialNameHave(residential_name);
        } catch (Exception e) {
            IszLogger.error("ResidentialServiceFacade.checkResidentialNameHave", e);
            return ResultMsg.createErrorMsg(e.getMessage());
        }
    }

    @Override
    public ResultObjectMsg<Residential> selectByDepId(String dep_id) {
        try {
            return residentialServiceBiz.selectByDepId(dep_id);
        } catch (Exception e) {
            IszLogger.error("ResidentialServiceFacade.selectByDepId", e);
            return new ResultObjectMsg<Residential>(e.getMessage());
        }
    }

	
	@Override
	public ResultMsg saveResidentialCorrection(ResidentialCorrection residentialCorrection, SysUser user){
		try {
			return residentialServiceBiz.saveResidentialCorrection(residentialCorrection,user);
		} catch (Exception e) {
			IszLogger.error("ResidentialServiceFacade.addResidentialCorrection",e);
			return ResultMsg.createErrorMsg(e.getMessage());
		}
	}

    @Override
    public ResultMsg getIn() {
        try {
            return residentialServiceBiz.getIn();
        } catch (Exception e) {
            IszLogger.error("ResidentialServiceFacade.getIn", e);
            return ResultMsg.createErrorMsg(e.getMessage());
        }
    }

    @Override
    public ResultMsg getInResi() {
        try {
            return residentialServiceBiz.getInResi();
        } catch (Exception e) {
            IszLogger.error("ResidentialServiceFacade.getInResi", e);
            return ResultMsg.createErrorMsg(e.getMessage());
        }
    }

    @Override
    public ResultObjectMsg<PagingHelper<Map<String, Object>>> searchResidentialListForSelect(Map<String, Object> pageData) {
        try {
            return residentialServiceBiz.searchResidentialListForSelect(pageData);
        } catch (Exception e) {
            IszLogger.error("ResidentialServiceFacade.residentialListForSelect", e);
            return new ResultObjectMsg<PagingHelper<Map<String, Object>>>(e.getMessage());
        }
    }

    @Override
    public ResultMsg updateResidential(Residential residential, SysUser sysUser) {
        try {
            return residentialServiceBiz.updateResidential(residential, sysUser);
        } catch (Exception e) {
            IszLogger.error("ResidentialServiceFacade.updateResidential", e);
            return ResultMsg.createErrorMsg(e.getMessage());
        }
    }

	@Override
	public ResultMsg addResidentialCorrection(
			ResidentialCorrection residentialCorrection, SysUser sysUser) {
		return residentialServiceBiz.addResidentialCorrection(residentialCorrection,sysUser);
	}

	@Override
	public ResultObjectMsg<PagingHelper<ResidentialCorrection>> auditResidentialList(
			Map<String, Object> pageData) {
		return residentialServiceBiz.auditResidentialList(pageData);
	}

	@Override
	public ResultMsg auditResidential(
			ResidentialCorrection residentialCorrection,SysUser sysUser) {
		return residentialServiceBiz.auditResidential(residentialCorrection,sysUser);
	}

	@Override
	public ResultMsg deleteResidentialCorrection(
			ResidentialCorrection residentialCorrection, SysUser sysUser) {
		
		return residentialServiceBiz.deleteResidentialCorrection(residentialCorrection,sysUser);
	}

}
