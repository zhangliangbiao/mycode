package com.isz.erp.house.service.impl;

import java.util.List;
import java.util.Map;

import com.isz.erp.facade.user.vo.SessionVo;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.isz.erp.common.page.PagingHelper;
import com.isz.erp.common.util.IszLogger;
import com.isz.erp.common.util.ResultMsg;
import com.isz.erp.common.util.ResultObjectMsg;
import com.isz.erp.facade.house.entity.Follow;
import com.isz.erp.facade.house.service.FollowService;
import com.isz.erp.facade.user.entity.SysUser;
import com.isz.erp.house.biz.FollowServiceBiz;

/**
 * @author WangShuo *
 * @version 1.0 *
 * @date 创建时间：2016年1月12日 下午6:26:33 *
 * @instruction 说明：
 */
@Service("followServiceFacade")
public class FollowServiceFacade implements FollowService {

    @Autowired
    private FollowServiceBiz followServiceBiz;

    /**
     * 查询跟进信息-分页
     */
    @Override
    public ResultObjectMsg<PagingHelper<Follow>> sercherFollowList(SessionVo sessionVo, Map<String, Object> data) {
        try {
            return followServiceBiz.sercherFollowList(sessionVo, data);
        } catch (Exception e) {
            IszLogger.error("FollowServiceFacade.sercherFollowList", e);
            return new ResultObjectMsg<PagingHelper<Follow>>(e.getMessage());
        }
    }

    /**
     * 保存跟进
     */
    @Override
    public ResultMsg saveFollow(Follow follow, SysUser user) {
        try {
            return followServiceBiz.saveFollow(follow, user);
        } catch (Exception e) {
            IszLogger.error("FollowServiceFacade.saveFollow", e);
            return ResultMsg.createErrorMsg(e.getMessage());
        }
    }

    @Override
    public ResultObjectMsg<Follow> selectFollowDetail(String follow_id) {
        try {
            return followServiceBiz.selectFollowDetail(follow_id);
        } catch (Exception e) {
            IszLogger.error("FollowServiceFacade.selectFollowDetail", e);
            return new ResultObjectMsg<Follow>(e.getMessage());
        }
    }

    @Override
    public ResultMsg deleteFollow(String follow_id, SysUser sysUser) {
        try {
            return followServiceBiz.deleteFollow(follow_id, sysUser);
        } catch (Exception e) {
            IszLogger.error("FollowServiceFacade.deleteFollow", e);
            return ResultMsg.createErrorMsg(e.getMessage());
        }
    }

	@Override
	public ResultObjectMsg<Follow> getLastFollow(Map<String, Object> map) {
		try {
            return followServiceBiz.getLastFollow(map);
        } catch (Exception e) {
            IszLogger.error("FollowServiceFacade.getLastFollow", e);
            return new ResultObjectMsg<Follow>(e.getMessage());
        }
	}
	
	@Override
	public ResultObjectMsg<Follow> getLastNotSysFollow(Map<String, Object> map) {
		try {
            return followServiceBiz.getLastNotSysFollow(map);
        } catch (Exception e) {
            IszLogger.error("FollowServiceFacade.getLastNotSysFollow", e);
            return new ResultObjectMsg<Follow>(e.getMessage());
        }
	}

	@Override
	public ResultObjectMsg<Integer> countAllFollowByObjectId(Map<String, Object> map) {
		try {
            return followServiceBiz.countAllFollowByObjectId(map);
        } catch (Exception e) {
            IszLogger.error("FollowServiceFacade.countAllFollowByObjectId", e);
            return new ResultObjectMsg<Integer>(e.getMessage());
        }
	}

	@Override
	public List<Map<String, Object>> searchFollowListForExportExcel(Map<String, Object> queryParaMap) {
		try {
            return followServiceBiz.searchFollowListForExportExcel(queryParaMap);
        } catch (Exception e) {
            IszLogger.error("FollowServiceFacade.searchFollowListForExportExcel", e);
            return null;
        }
	}

}
