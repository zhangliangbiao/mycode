package com.isz.erp.house.service.impl;

import java.util.Map;

import com.isz.erp.facade.house.entity.ResidentialBuildingFloor;
import com.isz.erp.facade.house.entity.ResidentialBuildingHouseNo;
import com.isz.erp.facade.house.entity.ResidentialBuildingUnit;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.isz.erp.common.page.PagingHelper;
import com.isz.erp.common.util.IszLogger;
import com.isz.erp.common.util.ResultMsg;
import com.isz.erp.common.util.ResultObjectMsg;
import com.isz.erp.facade.house.entity.ResidentialBuilding;
import com.isz.erp.facade.house.service.ResidentialBuildingService;
import com.isz.erp.facade.user.entity.SysUser;
import com.isz.erp.house.biz.ResidentialBuildingServiceBiz;

/**
 * @author WangShuo *
 * @version 1.0 *
 * @date 创建时间：2016年1月22日 下午12:54:38 *
 * @instruction 说明：
 */
@Service("residentialBuildingFacade")
public class ResidentialBuildingFacade implements ResidentialBuildingService {

    @Autowired
    private ResidentialBuildingServiceBiz residentialBuildingServiceBiz;

    /**
     * 查询楼栋信息(分页)
     *
     * @param pageData
     * @return
     */
    @Override
    public ResultObjectMsg<PagingHelper<ResidentialBuilding>> searchBuildingList(Map<String, Object> pageData) {
        try {
            return residentialBuildingServiceBiz.searchBuildingList(pageData);
        } catch (Exception e) {
            IszLogger.error("ResidentialBuildingFacade.searchBuildingList", e);
            return new ResultObjectMsg<PagingHelper<ResidentialBuilding>>(e.getMessage());
        }
    }

    @Override
    public ResultMsg saveResidentialBuilding(ResidentialBuilding residentialBuilding, SysUser user) {
        try {
            return residentialBuildingServiceBiz.saveResidentialBuilding(residentialBuilding, user);
        } catch (Exception e) {
            IszLogger.error("ResidentialBuildingFacade.saveResidentialBuilding", e);
            return ResultMsg.createErrorMsg(e.getMessage());
        }
    }

    @Override
    public ResultMsg deleteResidentialBuilding4Update(String building_id, SysUser user) {
        try {
            return residentialBuildingServiceBiz.deleteResidentialBuilding4Update(building_id, user);
        } catch (Exception e) {
            IszLogger.error("ResidentialBuildingFacade.deleteResidentialBuilding4Update", e);
            return ResultMsg.createErrorMsg(e.getMessage());
        }
    }

    @Override
    public ResultObjectMsg<ResidentialBuilding> selectResidentialBuildingDetail(String building_id) {
        try {
            return residentialBuildingServiceBiz.selectResidentialBuildingDetail(building_id);
        } catch (Exception e) {
            IszLogger.error("ResidentialBuildingFacade.selectResidentialBuildingDetail", e);
            return new ResultObjectMsg<ResidentialBuilding>(e.getMessage());
        }
    }

    @Override
    public ResultObjectMsg<PagingHelper<ResidentialBuilding>> searchBuildingList4House(Map<String, Object> pageData) {
        try {
            return residentialBuildingServiceBiz.searchBuildingList4House(pageData);
        } catch (Exception e) {
            IszLogger.error("ResidentialBuildingFacade.searchBuildingList4House", e);
            return new ResultObjectMsg<PagingHelper<ResidentialBuilding>>(e.getMessage());
        }
    }

    @Override
    public ResultMsg isUse4Residential(Map<String, Object> map) {
        try {
            return residentialBuildingServiceBiz.isUse4Residential(map);
        } catch (Exception e) {
            IszLogger.error("ResidentialBuildingFacade.isUse4Residential", e);
            return ResultMsg.createErrorMsg(e.getMessage());
        }
    }

    @Override
    public ResultObjectMsg<PagingHelper<Map<String, Object>>> searchResidentialBuildingListForSelect(Map<String, Object> pageData) {
        try {
            return residentialBuildingServiceBiz.searchResidentialBuildingListForSelect(pageData);
        } catch (Exception e) {
            IszLogger.error("ResidentialServiceFacade.searchResidentialBuildingListForSelect", e);
            return new ResultObjectMsg<PagingHelper<Map<String, Object>>>(e.getMessage());
        }
    }

    @Override
    public ResultObjectMsg<PagingHelper<Map<String, Object>>> searchResidentialBuildingHouseNoListForSelect(Map<String, Object> pageData) {
        try {
            return residentialBuildingServiceBiz.searchResidentialBuildingHouseNoListForSelect(pageData);
        } catch (Exception e) {
            IszLogger.error("ResidentialServiceFacade.searchResidentialBuildingHouseNoListForSelect", e);
            return new ResultObjectMsg<PagingHelper<Map<String, Object>>>(e.getMessage());
        }
    }

    @Override
    public ResultMsg saveResidentialBuildingNew(ResidentialBuilding residentialBuilding, SysUser sysUser) {
        try {
            return residentialBuildingServiceBiz.saveResidentialBuildingNew(residentialBuilding, sysUser);
        } catch (Exception e) {
            IszLogger.error("ResidentialBuildingFacade.saveResidentialBuildingNew", e);
            return ResultMsg.createErrorMsg(e.getMessage());
        }
    }

    @Override
    public ResultObjectMsg<ResidentialBuilding> selectResidentialBuildingDetailNew(String building_id) {
        try {
            return residentialBuildingServiceBiz.selectResidentialBuildingDetailNew(building_id);
        } catch (Exception e) {
            IszLogger.error("ResidentialBuildingFacade.selectResidentialBuildingDetailNew", e);
            return new ResultObjectMsg<ResidentialBuilding>(e.getMessage());
        }
    }

    @Override
    public ResultObjectMsg<PagingHelper<ResidentialBuildingUnit>> searchBuildingUnitList(Map<String, Object> pageData) {
        try {
            return residentialBuildingServiceBiz.searchBuildingUnitList(pageData);
        } catch (Exception e) {
            IszLogger.error("ResidentialBuildingFacade.searchBuildingUnitList", e);
            return new ResultObjectMsg<PagingHelper<ResidentialBuildingUnit>>(e.getMessage());
        }
    }

    @Override
    public ResultMsg deleteResidentialBuildingUnit(String unit_id, SysUser sysUser) {
        try {
            return residentialBuildingServiceBiz.deleteResidentialBuildingUnit(unit_id, sysUser);
        } catch (Exception e) {
            IszLogger.error("ResidentialBuildingFacade.deleteResidentialBuildingUnit", e);
            return ResultMsg.createErrorMsg(e.getMessage());
        }
    }

    @Override
    public ResultMsg saveResidentialBuildingUnit(ResidentialBuildingUnit residentialBuildingUnit, SysUser sysUser) {
        try {
            return residentialBuildingServiceBiz.saveResidentialBuildingUnit(residentialBuildingUnit, sysUser);
        } catch (Exception e) {
            IszLogger.error("ResidentialBuildingFacade.saveResidentialBuildingUnit", e);
            return ResultMsg.createErrorMsg(e.getMessage());
        }
    }

    @Override
    public ResultObjectMsg<ResidentialBuildingUnit> selectResidentialBuildingUnitDetail(String unit_id) {
        try {
            return residentialBuildingServiceBiz.selectResidentialBuildingUnitDetail(unit_id);
        } catch (Exception e) {
            IszLogger.error("ResidentialBuildingFacade.selectResidentialBuildingUnitDetail", e);
            return new ResultObjectMsg<ResidentialBuildingUnit>(e.getMessage());
        }
    }

    @Override
    public ResultObjectMsg<PagingHelper<ResidentialBuildingFloor>> searchBuildingFloorList(Map<String, Object> pageData) {
        try {
            return residentialBuildingServiceBiz.searchBuildingFloorList(pageData);
        } catch (Exception e) {
            IszLogger.error("ResidentialBuildingFacade.searchBuildingFloorList", e);
            return new ResultObjectMsg<PagingHelper<ResidentialBuildingFloor>>(e.getMessage());
        }
    }

    @Override
    public ResultMsg deleteResidentialBuildingFloor(String floor_id, SysUser sysUser) {
        try {
            return residentialBuildingServiceBiz.deleteResidentialBuildingFloor(floor_id, sysUser);
        } catch (Exception e) {
            IszLogger.error("ResidentialBuildingFacade.deleteResidentialBuildingFloor", e);
            return ResultMsg.createErrorMsg(e.getMessage());
        }
    }

    @Override
    public ResultMsg saveResidentialBuildingFloor(ResidentialBuildingFloor residentialBuildingFloor, SysUser sysUser) {
        try {
            return residentialBuildingServiceBiz.saveResidentialBuildingFloor(residentialBuildingFloor, sysUser);
        } catch (Exception e) {
            IszLogger.error("ResidentialBuildingFacade.saveResidentialBuildingFloor", e);
            return ResultMsg.createErrorMsg(e.getMessage());
        }
    }

    @Override
    public ResultObjectMsg<ResidentialBuildingFloor> selectResidentialBuildingFloorDetail(String floor_id) {
        try {
            return residentialBuildingServiceBiz.selectResidentialBuildingFloorDetail(floor_id);
        } catch (Exception e) {
            IszLogger.error("ResidentialBuildingFacade.selectResidentialBuildingFloorDetail", e);
            return new ResultObjectMsg<ResidentialBuildingFloor>(e.getMessage());
        }
    }

    @Override
    public ResultObjectMsg<PagingHelper<ResidentialBuildingHouseNo>> searchBuildingHouseNoList(Map<String, Object> pageData) {
        try {
            return residentialBuildingServiceBiz.searchBuildingHouseNoList(pageData);
        } catch (Exception e) {
            IszLogger.error("ResidentialBuildingFacade.searchBuildingHouseNoList", e);
            return new ResultObjectMsg<PagingHelper<ResidentialBuildingHouseNo>>(e.getMessage());
        }
    }

    @Override
    public ResultMsg deleteResidentialBuildingHouseNo(String house_no_id, SysUser sysUser) {
        try {
            return residentialBuildingServiceBiz.deleteResidentialBuildingHouseNo(house_no_id, sysUser);
        } catch (Exception e) {
            IszLogger.error("ResidentialBuildingFacade.deleteResidentialBuildingHouseNo", e);
            return ResultMsg.createErrorMsg(e.getMessage());
        }
    }

    @Override
    public ResultMsg saveResidentialBuildingHouseNo(ResidentialBuildingHouseNo residentialBuildingHouseNo, SysUser sysUser) {
        try {
            return residentialBuildingServiceBiz.saveResidentialBuildingHouseNo(residentialBuildingHouseNo, sysUser);
        } catch (Exception e) {
            IszLogger.error("ResidentialBuildingFacade.saveResidentialBuildingHouseNo", e);
            return ResultMsg.createErrorMsg(e.getMessage());
        }
    }

    @Override
    public ResultObjectMsg<ResidentialBuildingHouseNo> selectResidentialBuildingHouseNoDetail(Map<String, Object> pageData) {
        try {
            return residentialBuildingServiceBiz.selectResidentialBuildingHouseNoDetail(pageData);
        } catch (Exception e) {
            IszLogger.error("ResidentialBuildingFacade.selectResidentialBuildingHouseNoDetail", e);
            return new ResultObjectMsg<ResidentialBuildingHouseNo>(e.getMessage());
        }
    }

}
